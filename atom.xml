<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>彭小余的博客</title>
  
  <subtitle>有梦想的咸鱼</subtitle>
  <link href="http://dreamerpxy.github.io/atom.xml" rel="self"/>
  
  <link href="http://dreamerpxy.github.io/"/>
  <updated>2022-12-25T05:23:02.516Z</updated>
  <id>http://dreamerpxy.github.io/</id>
  
  <author>
    <name>pengxiaoyu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Grpc in action(六) 负载均衡（一）</title>
    <link href="http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E5%85%AD-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E5%85%AD-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-12-25T05:22:38.000Z</published>
    <updated>2022-12-25T05:23:02.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="六、负载均衡（一）"><a href="#六、负载均衡（一）" class="headerlink" title="六、负载均衡（一）"></a>六、负载均衡（一）</h1><p>生产环境中，往往生产者和消费者都是多个，消费者需要从服务列表中挑选一个生产者进行消费，进而有了微服务环境中的一个特性负载均衡。RPC框架基本都支持负载均衡，duboo这方面做的很优秀，框架内部就支持了多种负载均衡策略。接下来，我们来介绍下负载均衡在grpc里的设计和思考。相信大家肯定在其中有所收获。</p><h2 id="一、gRPC自带负载均衡算法"><a href="#一、gRPC自带负载均衡算法" class="headerlink" title="一、gRPC自带负载均衡算法"></a>一、gRPC自带负载均衡算法</h2><h3 id="1、定义proto接口"><a href="#1、定义proto接口" class="headerlink" title="1、定义proto接口"></a>1、定义proto接口</h3><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;<span class="comment">//标识 proto版本 建议使用proto3</span></span><br><span class="line"><span class="keyword">package</span> casservice;<span class="comment">//proto包名 避免命名冲突，也可以作为引入其他proto文件时使用</span></span><br><span class="line"><span class="keyword">option</span> java_package = <span class="string">&quot;com.example.casservice&quot;</span> ;<span class="comment">//生成的类将带有此包名，不指定则使用package</span></span><br><span class="line"><span class="keyword">option</span> cc_generic_services = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;./pb&quot;</span>;</span><br><span class="line"><span class="keyword">option</span> java_outer_classname = <span class="string">&quot;CasServicePbEntity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">CasLoginReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> userName = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> password = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">CasLoginRes</span>&#123;</span><br><span class="line">   <span class="type">string</span> uid = <span class="number">1</span>;</span><br><span class="line">   <span class="type">string</span> sex = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">service </span><span class="title class_">CasService</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> casLogin(CasLoginReq) <span class="keyword">returns</span> (CasLoginRes)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、Java语言实现"><a href="#2、Java语言实现" class="headerlink" title="2、Java语言实现"></a>2、Java语言实现</h3><ul><li>服务端实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.casservice.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.casservice.CasServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> com.example.casservice.CasServicePbEntity;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CasServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">CasServiceGrpc</span>.CasServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CasServiceImpl</span><span class="params">(Integer port)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">casLogin</span><span class="params">(CasServicePbEntity.CasLoginReq request, StreamObserver&lt;CasServicePbEntity.CasLoginRes&gt; responseObserver)</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;port:&quot;</span>+port+<span class="string">&quot;登录请求，用户名：&quot;</span>+request.getUserName()+<span class="string">&quot;\t密码：&quot;</span>+request.getPassword());</span><br><span class="line">        responseObserver.onNext(CasServicePbEntity.CasLoginRes.newBuilder()</span><br><span class="line">                .setUid(<span class="string">&quot;port:&quot;</span>+port+<span class="string">&quot;\t&quot;</span>+UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>))</span><br><span class="line">                .setSex(<span class="string">&quot;男&quot;</span>).build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>启动多个服务端实例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.casservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.casservice.impl.CasServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> io.grpc.Server;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        List&lt;Integer&gt; ports = Lists.newArrayList();</span><br><span class="line"></span><br><span class="line">        List&lt;Server&gt; servers = Lists.newArrayList();</span><br><span class="line">        ports.add(<span class="number">10084</span>);</span><br><span class="line">        ports.add(<span class="number">10085</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Integer port : ports) &#123;</span><br><span class="line">            System.out.println(port + <span class="string">&quot;启动成功...&quot;</span>);</span><br><span class="line">            <span class="type">CasServiceImpl</span> <span class="variable">casService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CasServiceImpl</span>(port);</span><br><span class="line">            <span class="type">Server</span> <span class="variable">server</span> <span class="operator">=</span> ServerBuilder.forPort(port).addService(casService)</span><br><span class="line">                    .build();</span><br><span class="line">            server.start();</span><br><span class="line">            servers.add(server);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Server server : servers) &#123;</span><br><span class="line">            server.awaitTermination();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>客户端需要实现一个自定的namereslover来将请求的域名解析为服务实例ip</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.casservice.resolve;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> io.grpc.EquivalentAddressGroup;</span><br><span class="line"><span class="keyword">import</span> io.grpc.NameResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.Attributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomNameResolver</span> <span class="keyword">extends</span> <span class="title class_">NameResolver</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String path;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Listener2 listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomNameResolver</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.path = path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServiceAuthority</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Listener2 listener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = listener;</span><br><span class="line">        <span class="built_in">this</span>.resolve();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">resolve</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;SocketAddress&gt; socketAddressList = getAddressList(path).stream()</span><br><span class="line">                .map(<span class="built_in">this</span>::toSocketAddress)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        List&lt;EquivalentAddressGroup&gt; equivalentAddressGroups = Lists.newArrayList();</span><br><span class="line">        <span class="keyword">for</span> (SocketAddress socketAddress : socketAddressList) &#123;</span><br><span class="line">            <span class="type">EquivalentAddressGroup</span> <span class="variable">equivalentAddressGroup</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EquivalentAddressGroup</span>(socketAddress);</span><br><span class="line">            equivalentAddressGroups.add(equivalentAddressGroup);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ResolutionResult</span> <span class="variable">resolutionResult</span> <span class="operator">=</span> ResolutionResult.newBuilder()</span><br><span class="line">                .setAddresses(equivalentAddressGroups)</span><br><span class="line">                .setAttributes(Attributes.EMPTY)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.listener.onResult(resolutionResult);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> SocketAddress <span class="title function_">toSocketAddress</span><span class="params">(InetSocketAddress address)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(address.getHostName(), address.getPort());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;InetSocketAddress&gt; <span class="title function_">getAddressList</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;path:&quot;</span>+path);</span><br><span class="line">        <span class="type">InetSocketAddress</span> <span class="variable">inetSocketAddress</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">10084</span>);</span><br><span class="line">        <span class="type">InetSocketAddress</span> <span class="variable">inetSocketAddress2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">10085</span>);</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(inetSocketAddress, inetSocketAddress2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新规范需要使用provider注册nameresolver</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.casservice.resolve;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.NameResolver;</span><br><span class="line"><span class="keyword">import</span> io.grpc.NameResolverProvider;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomNameResolverProvider</span> <span class="keyword">extends</span> <span class="title class_">NameResolverProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomNameResolverProvider</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> NameResolver <span class="title function_">newNameResolver</span><span class="params">(URI targetUri, NameResolver.Args args)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CustomNameResolver</span>(targetUri.getPath());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">isAvailable</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">priority</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDefaultScheme</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;example&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>使用 **round_robin、**</code><strong><code>pick_first</code> 轮询的方式请求 发起二十次请求</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.casservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.casservice.resolve.CustomNameResolverProvider;</span><br><span class="line"><span class="keyword">import</span> io.grpc.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        NameResolverRegistry.getDefaultRegistry().register(<span class="keyword">new</span> <span class="title class_">CustomNameResolverProvider</span>());</span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">channel</span> <span class="operator">=</span> ManagedChannelBuilder.forTarget(<span class="string">&quot;example:///lb.example.grpc.io&quot;</span>)</span><br><span class="line">                .defaultLoadBalancingPolicy(<span class="string">&quot;pick_first&quot;</span>)</span><br><span class="line">                .usePlaintext()</span><br><span class="line">                .build();</span><br><span class="line">        CasServiceGrpc.<span class="type">CasServiceBlockingStub</span> <span class="variable">casServiceBlockingStub</span> <span class="operator">=</span> CasServiceGrpc.newBlockingStub(channel);</span><br><span class="line">        System.out.println(<span class="string">&quot;==== Calling with pick_first ====&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            CasServicePbEntity.<span class="type">CasLoginRes</span> <span class="variable">casLoginRes</span> <span class="operator">=</span>casServiceBlockingStub.casLogin(CasServicePbEntity.CasLoginReq.newBuilder()</span><br><span class="line">                    .setUserName(<span class="string">&quot;java_test&quot;</span>)</span><br><span class="line">                    .setPassword(<span class="string">&quot;test_password&quot;</span>).build());</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;casLoginRes,uid:&quot;</span>+casLoginRes.getUid()+<span class="string">&quot;性别:\t&quot;</span>+casLoginRes.getSex());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;==== Calling  with round_robin ====&quot;</span>);</span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">channel2</span> <span class="operator">=</span> ManagedChannelBuilder.forTarget(<span class="string">&quot;example:///lb.example.grpc.io&quot;</span>)</span><br><span class="line">                .defaultLoadBalancingPolicy(<span class="string">&quot;round_robin&quot;</span>)</span><br><span class="line">                .usePlaintext()</span><br><span class="line">                .build();</span><br><span class="line">        CasServiceGrpc.<span class="type">CasServiceBlockingStub</span> <span class="variable">casServiceBlockingStub2</span> <span class="operator">=</span> CasServiceGrpc.newBlockingStub(channel2);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            CasServicePbEntity.<span class="type">CasLoginRes</span> <span class="variable">casLoginRes</span> <span class="operator">=</span>casServiceBlockingStub2.casLogin(CasServicePbEntity.CasLoginReq.newBuilder()</span><br><span class="line">                    .setUserName(<span class="string">&quot;java_test2&quot;</span>)</span><br><span class="line">                    .setPassword(<span class="string">&quot;test_password2&quot;</span>).build());</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;casLoginRes,uid:&quot;</span>+casLoginRes.getUid()+<span class="string">&quot;性别:\t&quot;</span>+casLoginRes.getSex());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">==== Calling with pick_first ====</span><br><span class="line">path:/lb.example.grpc.io</span><br><span class="line">casLoginRes,uid:port:10084441f1ce54214475cb366982e3e0fd726性别:男</span><br><span class="line">casLoginRes,uid:port:10084a4cfed898db64706a18507983d8589d6性别:男</span><br><span class="line">casLoginRes,uid:port:10084a04fb2b71944440b8ed00f02bdc3b15f性别:男</span><br><span class="line">casLoginRes,uid:port:100842b2668b2f1ad472ab35729708f0959d3性别:男</span><br><span class="line">casLoginRes,uid:port:100841fa78e4526c24daf9c6d9779d1626ca9性别:男</span><br><span class="line">casLoginRes,uid:port:10084826faf498afc4e1ba65db18a1eb0ccf4性别:男</span><br><span class="line">casLoginRes,uid:port:10084c9c992e0b4954b9a9f1e94022c8a65ca性别:男</span><br><span class="line">casLoginRes,uid:port:1008408b52ac7e444450c9aaad323d255b168性别:男</span><br><span class="line">casLoginRes,uid:port:100849cde040761cb4de993f3fbc95e9299e3性别:男</span><br><span class="line">casLoginRes,uid:port:10084d8aa79dbcd094c0f918b219ba3cbb7a2性别:男</span><br><span class="line">casLoginRes,uid:port:1008478575fcb8e2f40cab1a3085e7d609c1f性别:男</span><br><span class="line">casLoginRes,uid:port:10084c1863d7b914045d6b339a5be8770b215性别:男</span><br><span class="line">casLoginRes,uid:port:1008480bd8a2a1a444ade901c849a7e338e63性别:男</span><br><span class="line">casLoginRes,uid:port:100845e37a848792a41dab612b13089677771性别:男</span><br><span class="line">casLoginRes,uid:port:100841674a08cdcc64b4882805038485742d5性别:男</span><br><span class="line">casLoginRes,uid:port:10084192055f9ebfd4a1db03679cc875560c6性别:男</span><br><span class="line">casLoginRes,uid:port:1008463d611cab7884ff7b3e5e21073fc6164性别:男</span><br><span class="line">casLoginRes,uid:port:10084d2d7ca2e4122428a8d134160e47938e9性别:男</span><br><span class="line">casLoginRes,uid:port:100846e924aae0c3e44348dce641c06652440性别:男</span><br><span class="line">casLoginRes,uid:port:1008491a9dd7f159e49a0948ce30c4fb1ecf2性别:男</span><br><span class="line">==== Calling  with round_robin ====</span><br><span class="line">path:/lb.example.grpc.io</span><br><span class="line">casLoginRes,uid:port:10085f3d4133b24ac4ab1ae2afac4078e46e7性别:男</span><br><span class="line">casLoginRes,uid:port:10084075838a14fdc4626a07892d3701c30ce性别:男</span><br><span class="line">casLoginRes,uid:port:10085a627d8c99a2b4b1185e5414565142611性别:男</span><br><span class="line">casLoginRes,uid:port:1008458cca91d354b4688807674278cda539e性别:男</span><br><span class="line">casLoginRes,uid:port:100853be7bcd4a43247b4b889feb4daf8724f性别:男</span><br><span class="line">casLoginRes,uid:port:10084b7ff85a74db44736804234bc20e1feb8性别:男</span><br><span class="line">casLoginRes,uid:port:10085ba0028287c0c4a62b2854c25c1344120性别:男</span><br><span class="line">casLoginRes,uid:port:10084f6a045814e2149e9833ae644d563c87b性别:男</span><br><span class="line">casLoginRes,uid:port:100850596a4fc0b644d5a9e734ec9262abf7f性别:男</span><br><span class="line">casLoginRes,uid:port:10084574ff946c98547e7a23d30dd9905d9fa性别:男</span><br><span class="line">casLoginRes,uid:port:10085b7d6a68b5e344310ae133b11a2b6635e性别:男</span><br><span class="line">casLoginRes,uid:port:100849ab058a644fd45eb9ea90fbb7df0b575性别:男</span><br><span class="line">casLoginRes,uid:port:100851153074d7626465d96ef041dafa55bb3性别:男</span><br><span class="line">casLoginRes,uid:port:10084b00ddaec91cd40a1abe9cd83a39bd5ef性别:男</span><br><span class="line">casLoginRes,uid:port:10085840417637b264cefb34b284ce55daa65性别:男</span><br><span class="line">casLoginRes,uid:port:10084d033dba7c8fb49cdacbe4ae7bd91c714性别:男</span><br><span class="line">casLoginRes,uid:port:100857ccdd8f59a4f448a91df00dff15ac258性别:男</span><br><span class="line">casLoginRes,uid:port:10084e6042be3517e47f9a95257507d1aa66c性别:男</span><br><span class="line">casLoginRes,uid:port:100858bf6183990c2449cb7e58f11534e4211性别:男</span><br><span class="line">casLoginRes,uid:port:1008454788c7324ce45eb88339c14f03c9be2性别:男</span><br></pre></td></tr></table></figure><h3 id="2、Go语言客户端实现"><a href="#2、Go语言客户端实现" class="headerlink" title="2、Go语言客户端实现"></a>2、Go语言客户端实现</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/resolver&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part06-loadbalancing/go/client/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">exampleScheme      = <span class="string">&quot;example&quot;</span></span><br><span class="line">exampleServiceName = <span class="string">&quot;lb.example.grpc.io&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> addrs = []<span class="type">string</span>&#123;<span class="string">&quot;localhost:10084&quot;</span>, <span class="string">&quot;localhost:10085&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">pickfirstConn, err := grpc.Dial(</span><br><span class="line">fmt.Sprintf(<span class="string">&quot;%s:///%s&quot;</span>, exampleScheme, exampleServiceName), <span class="comment">// &quot;example:///lb.example.grpc.io&quot;</span></span><br><span class="line"><span class="comment">// grpc.WithBalancerName(&quot;pick_first&quot;), // &quot;pick_first&quot; is the default, so this DialOption is not necessary.</span></span><br><span class="line">grpc.WithTransportCredentials(insecure.NewCredentials()),</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;did not connect: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> pickfirstConn.Close()</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">&quot;==== Calling with pick_first ====&quot;</span>)</span><br><span class="line">makeRPCs(pickfirstConn, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Make another ClientConn with round_robin policy.</span></span><br><span class="line">roundrobinConn, err := grpc.Dial(</span><br><span class="line">fmt.Sprintf(<span class="string">&quot;%s:///%s&quot;</span>, exampleScheme, exampleServiceName), <span class="comment">// // &quot;example:///lb.example.grpc.io&quot;</span></span><br><span class="line"><span class="comment">//grpc.WithBalancer((&quot;round_robin&quot;), // This sets the initial balancing policy.</span></span><br><span class="line">grpc.WithTransportCredentials(insecure.NewCredentials()),</span><br><span class="line">grpc.WithDefaultServiceConfig(<span class="string">`&#123;&quot;loadBalancingConfig&quot;: [&#123;&quot;round_robin&quot;:&#123;&#125;&#125;]&#125;`</span>), <span class="comment">// This sets the initial balancing policy.</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;did not connect: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> roundrobinConn.Close()</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">&quot;==== Calling  with round_robin ====&quot;</span>)</span><br><span class="line">makeRPCs(roundrobinConn, <span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeRPCs</span><span class="params">(conn *grpc.ClientConn, count <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">client := pb.NewCasServiceClient(conn)</span><br><span class="line">req:= &amp;pb.CasLoginReq&#123;</span><br><span class="line">UserName: <span class="string">&quot;go_cas_req&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt;count ; i++ &#123;</span><br><span class="line">res, err := client.CasLogin(context.Background(), req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;err:%v&quot;</span>,err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;res:%v&quot;</span>,res)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> exampleResolverBuilder <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*exampleResolverBuilder)</span></span> Build(target resolver.Target, cc resolver.ClientConn, opts resolver.BuildOptions) (resolver.Resolver, <span class="type">error</span>) &#123;</span><br><span class="line">r := &amp;exampleResolver&#123;</span><br><span class="line">target: target,</span><br><span class="line">cc:     cc,</span><br><span class="line">addrsStore: <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span>&#123;</span><br><span class="line"><span class="string">&quot;/lb.example.grpc.io&quot;</span>:&#123;<span class="string">&quot;localhost:10084&quot;</span>, <span class="string">&quot;localhost:10085&quot;</span>&#125;, <span class="comment">// &quot;lb.example.grpc.io&quot;: &quot;localhost:50051&quot;, &quot;localhost:50052&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">r.start()</span><br><span class="line"><span class="keyword">return</span> r, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*exampleResolverBuilder)</span></span> Scheme() <span class="type">string</span> &#123; <span class="keyword">return</span> <span class="string">&quot;example&quot;</span> &#125; <span class="comment">// &quot;example&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> exampleResolver <span class="keyword">struct</span> &#123;</span><br><span class="line">target     resolver.Target</span><br><span class="line">cc         resolver.ClientConn</span><br><span class="line">addrsStore <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *exampleResolver)</span></span> start() &#123;</span><br><span class="line">addrStrs := r.addrsStore[r.target.URL.Path]</span><br><span class="line">addrs := <span class="built_in">make</span>([]resolver.Address, <span class="built_in">len</span>(addrStrs))</span><br><span class="line"><span class="keyword">for</span> i, s := <span class="keyword">range</span> addrStrs &#123;</span><br><span class="line">addrs[i] = resolver.Address&#123;Addr: s&#125;</span><br><span class="line">&#125;</span><br><span class="line">r.cc.UpdateState(resolver.State&#123;Addresses: addrs&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*exampleResolver)</span></span> ResolveNow(o resolver.ResolveNowOptions) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*exampleResolver)</span></span> Close()                                 &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">resolver.Register(&amp;exampleResolverBuilder&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、小结"><a href="#二、小结" class="headerlink" title="二、小结"></a>二、小结</h2><p>gRPC默认的负载均衡方式只有三种：****<code>pick_first</code>、<code>round_robin</code>、<code>grpclb</code> （**但这种方式已经过时了，被xds所替代）</p><p>gRPC提供的前两种方式，在复杂的生产环境中确实显得有些单薄，那作为一款优秀的框架，它是如何为我们提供解决方案的呢、</p><ul><li>相关连接</li></ul><p><a href="https://github.com/grpc/grpc/blob/master/doc/load-balancing.md">https://github.com/grpc/grpc/blob/master/doc/load-balancing.md</a></p><p><a href="https://github.com/grpc/grpc/blob/master/doc/naming.md">https://github.com/grpc/grpc/blob/master/doc/naming.md</a></p><p><a href="https://grpc.io/blog/grpc-load-balancing/">https://grpc.io/blog/grpc-load-balancing/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;六、负载均衡（一）&quot;&gt;&lt;a href=&quot;#六、负载均衡（一）&quot; class=&quot;headerlink&quot; title=&quot;六、负载均衡（一）&quot;&gt;&lt;/a&gt;六、负载均衡（一）&lt;/h1&gt;&lt;p&gt;生产环境中，往往生产者和消费者都是多个，消费者需要从服务列表中挑选一个生产者进行消费</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grpc in action(五) 错误处理</title>
    <link href="http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%BA%94-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    <id>http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%BA%94-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</id>
    <published>2022-12-25T05:21:53.000Z</published>
    <updated>2022-12-25T05:22:11.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="五、错误处理"><a href="#五、错误处理" class="headerlink" title="五、错误处理"></a>五、错误处理</h1><p>在业务开发中，大家是会使用http通用的错误码，还是统一返回HttpCode-200，转而使用业务自己定义的错误码呢？这个问题可能见仁见智，大家都有一些自己的理解和最佳实践。这节我们来看下gRPC中如何对错误进行处理的。</p><p>gRPC提供了一组定义良好的专用状态码，举例如下：</p><h2 id="一、一般的错误"><a href="#一、一般的错误" class="headerlink" title="一、一般的错误"></a>一、一般的错误</h2><table><thead><tr><th>案例</th><th>状态码</th></tr></thead><tbody><tr><td>客户端应用程序取消了请求</td><td>GRPC_STATUS_CANCELLED</td></tr><tr><td>截止日期在服务器返回状态之前已过期</td><td>GRPC_STATUS_DEADLINE_EXCEEDED</td></tr><tr><td>在服务器上找不到方法</td><td>GRPC_STATUS_UNIMPLEMENTED</td></tr><tr><td>服务器关闭</td><td>GRPC_STATUS_UNAVAILABLE</td></tr><tr><td>服务器抛出异常（或者除了返回状态码来终止 RPC 之外做了其他事情）</td><td>GRPC_STATUS_UNKNOWN</td></tr></tbody></table><h2 id="二、网络故障"><a href="#二、网络故障" class="headerlink" title="二、网络故障"></a>二、网络故障</h2><table><thead><tr><th>案例</th><th>状态码</th></tr></thead><tbody><tr><td>在截止日期到期之前不会传输任何数据。也适用于在截止日期到期之前传输了一些数据并且没有检测到其他故障的情况</td><td>GRPC_STATUS_DEADLINE_EXCEEDED</td></tr><tr><td>连接中断前传输的一些数据（例如，请求元数据已写入 TCP 连接）</td><td>GRPC_STATUS_UNAVAILABLE</td></tr></tbody></table><h2 id="三、协议错误"><a href="#三、协议错误" class="headerlink" title="三、协议错误"></a>三、协议错误</h2><table><thead><tr><th>案例</th><th>状态码</th></tr></thead><tbody><tr><td>无法解压但支持压缩算法</td><td>GRPC_STATUS_INTERNAL</td></tr><tr><td>服务器不支持客户端使用的压缩机制</td><td>GRPC_STATUS_UNIMPLEMENTED</td></tr><tr><td>达到流量控制资源限制</td><td>GRPC_STATUS_RESOURCE_EXHAUSTED</td></tr><tr><td>流量控制协议违规</td><td>GRPC_STATUS_INTERNAL</td></tr><tr><td>解析返回状态时出错</td><td>GRPC_STATUS_UNKNOWN</td></tr><tr><td>未经身份验证：凭据无法获取元数据</td><td>GRPC_STATUS_UNAUTHENTICATED</td></tr><tr><td>权限元数据中的主机集无效</td><td>GRPC_STATUS_UNAUTHENTICATED</td></tr><tr><td>解析响应协议缓冲区时出错</td><td>GRPC_STATUS_INTERNAL</td></tr><tr><td>解析请求协议缓冲区时出错</td><td>GRPC_STATUS_INTERNAL</td></tr></tbody></table><h2 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h2><p>这里模拟前端请求推荐列表页的接口，当用户没有登录是UserId&#x3D;-1，这时候服务端因为没有用户特征所以会拒绝下发数据，转而返回一个gRPC特定错误。现在来看下，Java和go是分别怎么样实现的吧。</p><h3 id="1、Go-服务端"><a href="#1、Go-服务端" class="headerlink" title="1、Go 服务端"></a>1、Go 服务端</h3><p>在返回错误码的时候，还可以返回绑定的错误详情</p><p>这里使用了gRPC自带的包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/genproto/googleapis/rpc/errdetails&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/codes&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/status&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part05-errorhanle/go/server/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*BlendService)</span></span> Blend(context context.Context, req *pb.BlendReq) (*pb.BlendRes, <span class="type">error</span>)  &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> req.UserId == <span class="string">&quot;-1&quot;</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;UserId is invalid! -&gt; Received User ID %s&quot;</span>, req.UserId)</span><br><span class="line">errorStatus := status.New(codes.InvalidArgument, <span class="string">&quot;Invalid information received&quot;</span>)</span><br><span class="line">ds, err := errorStatus.WithDetails(</span><br><span class="line">&amp;errdetails.BadRequest_FieldViolation&#123;</span><br><span class="line">Field:<span class="string">&quot;ID&quot;</span>,</span><br><span class="line">Description: fmt.Sprintf(<span class="string">&quot;UserId received is not valid :%s &quot;</span>, req.UserId),</span><br><span class="line">&#125;,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errorStatus.Err()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, ds.Err()</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">nids :=[]<span class="type">string</span>&#123;<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;pb.BlendRes&#123;</span><br><span class="line">Nid:nids,</span><br><span class="line">&#125;,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、Go客户端"><a href="#2、Go客户端" class="headerlink" title="2、Go客户端"></a>2、Go客户端</h3><p>客户端的行为就是拿到服务端返回的错误码和错误详情，进行对应的处理即可</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/genproto/googleapis/rpc/errdetails&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/codes&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/status&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part05-errorhanle/go/client/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">dial, err := grpc.Dial(<span class="string">&quot;localhost:10085&quot;</span>, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">client := pb.NewBlendServiceClient(dial)</span><br><span class="line">blend, err := client.Blend(context.Background(), &amp;pb.BlendReq&#123;</span><br><span class="line">UserId: <span class="string">&quot;-1&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;err is :%+v&quot;</span>,err)</span><br><span class="line">errorCode := status.Code(err)</span><br><span class="line"><span class="keyword">if</span> errorCode == codes.InvalidArgument &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Invalid Argument Error : %s&quot;</span>, errorCode)</span><br><span class="line">errorStatus := status.Convert(err)</span><br><span class="line"><span class="keyword">for</span> _, d := <span class="keyword">range</span> errorStatus.Details() &#123;</span><br><span class="line"><span class="keyword">switch</span> info := d.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> *errdetails.BadRequest_FieldViolation:</span><br><span class="line">log.Printf(<span class="string">&quot;Request Field Invalid: %s&quot;</span>, info)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">log.Printf(<span class="string">&quot;Unexpected error type: %s&quot;</span>, info)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Unhandled error : %s &quot;</span>, errorCode)</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;blend:%v&quot;</span>,blend.Nid)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、Java服务端"><a href="#3、Java服务端" class="headerlink" title="3、Java服务端"></a>3、Java服务端</h3><p>java是通过异常的方式对外发送一个错误信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlendServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">BlendServiceGrpc</span>.BlendServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(BlendServiceImpl.class.getName());</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">blend</span><span class="params">(BlendServicePbEntity.blendReq request, StreamObserver&lt;BlendServicePbEntity.blendRes&gt; responseObserver)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;-1&quot;</span>.equals(request.getUserId()))&#123;</span><br><span class="line">            logger.info(<span class="string">&quot;Invalid Order ID: &quot;</span> + request.getUserId());</span><br><span class="line">            responseObserver.onError(Status.INVALID_ARGUMENT.withDescription(<span class="string">&quot;Invalid UserId received.&quot;</span>).asException());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        responseObserver.onNext(BlendServicePbEntity.blendRes.newBuilder().addNid(<span class="string">&quot;java_1&quot;</span>)</span><br><span class="line">                .addNid(<span class="string">&quot;java_2&quot;</span>)</span><br><span class="line">                .addNid(<span class="string">&quot;java_3&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、Java客户端"><a href="#4、Java客户端" class="headerlink" title="4、Java客户端"></a>4、Java客户端</h3><p>接收当然也是使用处理异常的方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.examples.blendservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.ManagedChannel;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ManagedChannelBuilder;</span><br><span class="line"><span class="keyword">import</span> io.grpc.StatusRuntimeException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(App.class.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">managedChannel</span> <span class="operator">=</span> ManagedChannelBuilder.forAddress(<span class="string">&quot;localhost&quot;</span>,<span class="number">10085</span>)</span><br><span class="line">                .usePlaintext().build();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            BlendServicePbEntity.<span class="type">blendRes</span> <span class="variable">blend</span> <span class="operator">=</span> BlendServiceGrpc.newBlockingStub(managedChannel).blend(BlendServicePbEntity.blendReq.newBuilder()</span><br><span class="line">                    .setUserId(<span class="string">&quot;-1&quot;</span>)</span><br><span class="line">                    .build());</span><br><span class="line">            <span class="keyword">for</span> (String nid : blend.getNidList()) &#123;</span><br><span class="line">                System.out.println(nid);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (StatusRuntimeException e) &#123;</span><br><span class="line">            logger.info(<span class="string">&quot; Error Received - Error Code : &quot;</span> + e.getStatus().getCode());</span><br><span class="line">            logger.info(<span class="string">&quot;Error details -&gt; &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>参考文档</li></ul><p><a href="https://grpc.io/docs/guides/error/#protocol-errors">https://grpc.io/docs/guides/error/#protocol-errors</a></p><p><a href="https://github.com/avinassh/grpc-errors">https://github.com/avinassh/grpc-errors</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;五、错误处理&quot;&gt;&lt;a href=&quot;#五、错误处理&quot; class=&quot;headerlink&quot; title=&quot;五、错误处理&quot;&gt;&lt;/a&gt;五、错误处理&lt;/h1&gt;&lt;p&gt;在业务开发中，大家是会使用http通用的错误码，还是统一返回HttpCode-200，转而使用业务自己定义的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grpc in action(四) metadata</title>
    <link href="http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E5%9B%9B-metadata/"/>
    <id>http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E5%9B%9B-metadata/</id>
    <published>2022-12-25T05:21:07.000Z</published>
    <updated>2022-12-25T05:21:27.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="四、使用metadata传输数据"><a href="#四、使用metadata传输数据" class="headerlink" title="四、使用metadata传输数据"></a>四、使用metadata传输数据</h1><p>在一次rpc请求过程中我们可能不仅仅要使用req里的数据，可能也需要在metadata中放入一些通用数据，比如token、客户端上报的经纬度等信息</p><h2 id="一、Java语言实现"><a href="#一、Java语言实现" class="headerlink" title="一、Java语言实现"></a>一、Java语言实现</h2><h3 id="1、客户端发送metedata数据"><a href="#1、客户端发送metedata数据" class="headerlink" title="1、客户端发送metedata数据"></a>1、客户端发送metedata数据</h3><p>grpc-java采用拦截器的方式发送metedata</p><ul><li>使用自定义的拦截器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayClientInterceptor</span> <span class="keyword">implements</span> <span class="title class_">ClientInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;ReqT, RespT&gt; ClientCall&lt;ReqT, RespT&gt; <span class="title function_">interceptCall</span><span class="params">(MethodDescriptor&lt;ReqT, RespT&gt; method, CallOptions callOptions, Channel channel)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ForwardingClientCall</span>.SimpleForwardingClientCall&lt;ReqT, RespT&gt;(channel.newCall(method, callOptions)) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Listener&lt;RespT&gt; responseListener, Metadata headers)</span> &#123;</span><br><span class="line">                headers.put(Metadata.Key.of(<span class="string">&quot;token&quot;</span>, ASCII_STRING_MARSHALLER), UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>));</span><br><span class="line">                <span class="built_in">super</span>.start(responseListener, headers);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用grpc自带的拦截器 MetadataUtils.newAttachHeadersInterceptor</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This Java source file was generated by the Gradle &#x27;init&#x27; task.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.example.payservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.*;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.MetadataUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">channel</span> <span class="operator">=</span> ManagedChannelBuilder.forAddress(<span class="string">&quot;localhost&quot;</span>,<span class="number">10083</span>)</span><br><span class="line">                .usePlaintext()</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">Metadata</span> <span class="variable">metadata</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Metadata</span>();</span><br><span class="line">        metadata.put( Metadata.Key.of(<span class="string">&quot;token&quot;</span>,Metadata.ASCII_STRING_MARSHALLER), UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="type">Channel</span> <span class="variable">headChannel</span> <span class="operator">=</span> ClientInterceptors.intercept(channel, MetadataUtils.newAttachHeadersInterceptor(metadata));</span><br><span class="line">        PayServiceGrpc.<span class="type">PayServiceBlockingStub</span> <span class="variable">payServiceBlockingStub</span> <span class="operator">=</span> PayServiceGrpc.newBlockingStub(headChannel);</span><br><span class="line">        PayServicePbEntity.<span class="type">payOrderRes</span> <span class="variable">res</span> <span class="operator">=</span> payServiceBlockingStub.payOrder(PayServicePbEntity.payOrderReq.newBuilder().setOrderId(<span class="string">&quot;order_1&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        System.out.println(<span class="string">&quot;resCode:&quot;</span>+res.getRetCode()+<span class="string">&quot;\tresMsg:&quot;</span>+res.getRetMsg());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、服务端接收metedata数据"><a href="#2、服务端接收metedata数据" class="headerlink" title="2、服务端接收metedata数据"></a>2、服务端接收metedata数据</h3><p>服务端也需要使用拦截器接收数据</p><ul><li>服务主类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This Java source file was generated by the Gradle &#x27;init&#x27; task.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.example.payservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.payservice.impl.PayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.example.payservice.interceptor.MetadataInterceptor;</span><br><span class="line"><span class="keyword">import</span> io.grpc.Server;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Server</span> <span class="variable">server</span> <span class="operator">=</span> ServerBuilder.forPort(<span class="number">10083</span>)</span><br><span class="line">                .addService(<span class="keyword">new</span> <span class="title class_">PayServiceImpl</span>())</span><br><span class="line">                .intercept(<span class="keyword">new</span> <span class="title class_">MetadataInterceptor</span>())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        server.start();</span><br><span class="line">        server.awaitTermination();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>服务实现类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.payservice.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.payservice.PayServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> com.example.payservice.PayServicePbEntity;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">PayServiceGrpc</span>.PayServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">payOrder</span><span class="params">(PayServicePbEntity.payOrderReq request, StreamObserver&lt;PayServicePbEntity.payOrderRes&gt; responseObserver)</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;payOrder,order_Id:&quot;</span>+request.getOrderId());</span><br><span class="line"></span><br><span class="line">        responseObserver.onNext(PayServicePbEntity.payOrderRes.newBuilder().setRetCode(<span class="number">0</span>)</span><br><span class="line">        .setRetMsg(<span class="string">&quot;支付成功&quot;</span>)</span><br><span class="line">        .build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拦截器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.payservice.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.Metadata;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerCall;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerCallHandler;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MetadataInterceptor</span> <span class="keyword">implements</span> <span class="title class_">ServerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;ReqT, RespT&gt; ServerCall.Listener&lt;ReqT&gt; <span class="title function_">interceptCall</span><span class="params">(ServerCall&lt;ReqT, RespT&gt; call, Metadata headers, ServerCallHandler&lt;ReqT, RespT&gt; next)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> headers.get(Metadata.Key.of(<span class="string">&quot;token&quot;</span>, Metadata.ASCII_STRING_MARSHALLER));</span><br><span class="line">        System.out.println(<span class="string">&quot;token:&quot;</span>+token);</span><br><span class="line">        <span class="keyword">return</span> next.startCall(call, headers);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、Go语言实现"><a href="#二、Go语言实现" class="headerlink" title="二、Go语言实现"></a>二、Go语言实现</h2><p>相比Java来说，go语言显得更清晰、简洁</p><h3 id="1、客户端发送"><a href="#1、客户端发送" class="headerlink" title="1、客户端发送"></a>1、客户端发送</h3><p>grpc-go 使用了专门的metadata包传递值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/google/uuid&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/metadata&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part04-metedata/go/client/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">conn,err:=grpc.Dial(<span class="string">&quot;localhost:10083&quot;</span>,grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;did not connect: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line">req := &amp;pb.PayOrderReq&#123;OrderId: <span class="string">&quot;order_2&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">client := pb.NewPayServiceClient(conn)</span><br><span class="line">token := uuid.New().String()</span><br><span class="line"></span><br><span class="line">md := metadata.Pairs(</span><br><span class="line"><span class="string">&quot;token&quot;</span>,token)</span><br><span class="line">context := metadata.NewOutgoingContext(context.Background(),md)</span><br><span class="line">res,err:=client.PayOrder(context,req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;retCode:%d,retMsg:%s&quot;</span>,res.RetCode,res.RetMsg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、服务端接收"><a href="#2、服务端接收" class="headerlink" title="2、服务端接收"></a>2、服务端接收</h3><p>go服务端可以在相对应的方法实现里拿到metadata的值，这一点更加优于Java的实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/metadata&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/reflection&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part04-metedata/go/server/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PayServiceImpl <span class="keyword">struct</span> &#123;</span><br><span class="line">pb.UnimplementedPayServiceServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pay *PayServiceImpl)</span></span>PayOrder(context context.Context, req *pb.PayOrderReq) (*pb.PayOrderRes, <span class="type">error</span>) &#123;</span><br><span class="line"></span><br><span class="line">md,boo := metadata.FromIncomingContext(context)</span><br><span class="line"><span class="keyword">if</span> boo&#123;</span><br><span class="line">log.Printf(<span class="string">&quot;token:%s&quot;</span>,md[<span class="string">&quot;token&quot;</span>])</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;req:orderId:%s&quot;</span>,req.OrderId)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Creating and sending a header.</span></span><br><span class="line">header := metadata.New(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;<span class="string">&quot;location&quot;</span>: <span class="string">&quot;San Jose&quot;</span>, <span class="string">&quot;timestamp&quot;</span>: time.Now().Format(time.StampNano)&#125;)</span><br><span class="line">grpc.SendHeader(context, header)</span><br><span class="line"><span class="keyword">return</span> &amp;pb.PayOrderRes&#123;</span><br><span class="line">RetCode: <span class="number">0</span>,</span><br><span class="line">RetMsg:  <span class="string">&quot;支付成功&quot;</span>,</span><br><span class="line">&#125;,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">listen, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:10083&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">server := grpc.NewServer()</span><br><span class="line">pb.RegisterPayServiceServer(server,&amp;PayServiceImpl&#123;&#125;)</span><br><span class="line">reflection.Register(server)</span><br><span class="line">err = server.Serve(listen)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;四、使用metadata传输数据&quot;&gt;&lt;a href=&quot;#四、使用metadata传输数据&quot; class=&quot;headerlink&quot; title=&quot;四、使用metadata传输数据&quot;&gt;&lt;/a&gt;四、使用metadata传输数据&lt;/h1&gt;&lt;p&gt;在一次rpc请求过程中我们可</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grpc in action(三) 拦截器</title>
    <link href="http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%B8%89-%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%B8%89-%E6%8B%A6%E6%88%AA%E5%99%A8/</id>
    <published>2022-12-25T05:20:16.000Z</published>
    <updated>2022-12-25T05:20:41.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三、拦截器"><a href="#三、拦截器" class="headerlink" title="三、拦截器"></a>三、拦截器</h1><p>基本市面上所有框架都是支持拦截器的，gRPC也不例外。grpc支持客户端和服务端拦截以下是Java和go语言的实现。</p><h2 id="一、Java服务端拦截"><a href="#一、Java服务端拦截" class="headerlink" title="一、Java服务端拦截"></a>一、Java服务端拦截</h2><h3 id="1、创建一个proto文件进行演示"><a href="#1、创建一个proto文件进行演示" class="headerlink" title="1、创建一个proto文件进行演示"></a>1、创建一个proto文件进行演示</h3><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;<span class="comment">//标识 proto版本 建议使用proto3</span></span><br><span class="line"><span class="keyword">package</span> orderservice;<span class="comment">//proto包名 避免命名冲突，也可以作为引入其他proto文件时使用</span></span><br><span class="line"><span class="keyword">option</span> java_package = <span class="string">&quot;com.example.orderservice&quot;</span> ;<span class="comment">//生成的类将带有此包名，不指定则使用package</span></span><br><span class="line"><span class="keyword">option</span> cc_generic_services = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;./pb&quot;</span>;</span><br><span class="line"><span class="keyword">option</span> java_outer_classname = <span class="string">&quot;OrderPbEntity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetOrderListReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> userId = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetOrderListRes</span>&#123;</span><br><span class="line">  <span class="keyword">repeated</span> <span class="type">string</span> orderIds = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">SearchOrderListReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> orderName = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">SearchOrderListRes</span>&#123;</span><br><span class="line">  <span class="keyword">repeated</span> <span class="type">string</span> orderIds = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">service </span><span class="title class_">OrderService</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> getOrderList(GetOrderListReq) <span class="keyword">returns</span> (GetOrderListRes)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、实现服务端逻辑"><a href="#2、实现服务端逻辑" class="headerlink" title="2、实现服务端逻辑"></a>2、实现服务端逻辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.orderservice.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.OrderPbEntity;</span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.OrderServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">OrderServiceGrpc</span>.OrderServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, List&lt;String&gt;&gt; data = Maps.newHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getOrderList</span><span class="params">(OrderPbEntity.GetOrderListReq request, StreamObserver&lt;OrderPbEntity.GetOrderListRes&gt; responseObserver)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.isEmpty())&#123;</span><br><span class="line">            initData();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> request.getUserId();</span><br><span class="line">        List&lt;String&gt; strings = data.get(userId);</span><br><span class="line">        responseObserver.onNext(OrderPbEntity.GetOrderListRes.newBuilder().addAllOrderIds(strings).build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;String&gt; data1 = Lists.newArrayList();</span><br><span class="line">        data1.add(<span class="string">&quot;order_1&quot;</span>);</span><br><span class="line">        data1.add(<span class="string">&quot;order_2&quot;</span>);</span><br><span class="line">        data1.add(<span class="string">&quot;order_3&quot;</span>);</span><br><span class="line">        data1.add(<span class="string">&quot;order_4&quot;</span>);</span><br><span class="line">        data.put(<span class="string">&quot;1&quot;</span>,data1);</span><br><span class="line">        data.put(<span class="string">&quot;2&quot;</span>,data1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、创建拦截器实现"><a href="#3、创建拦截器实现" class="headerlink" title="3、创建拦截器实现"></a>3、创建拦截器实现</h3><ul><li><code>OrderMsgServerCall</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.orderservice.interceptors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.ForwardingServerCall;</span><br><span class="line"><span class="keyword">import</span> io.grpc.MethodDescriptor;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerCall;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderMsgServerCall</span>&lt;ReqT, RespT&gt; <span class="keyword">extends</span> <span class="title class_">ForwardingServerCall</span>.SimpleForwardingServerCall&lt;ReqT, RespT&gt;  &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(OrderMsgServerCall.class.getName());</span><br><span class="line"></span><br><span class="line">    OrderMsgServerCall(ServerCall&lt;ReqT, RespT&gt; delegate) &#123;</span><br><span class="line">        <span class="built_in">super</span>(delegate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> ServerCall&lt;ReqT, RespT&gt; <span class="title function_">delegate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.delegate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodDescriptor&lt;ReqT, RespT&gt; <span class="title function_">getMethodDescriptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getMethodDescriptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(RespT message)</span> &#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Message from Service -&gt; Client : &quot;</span> + message);</span><br><span class="line">        <span class="built_in">super</span>.sendMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>OrderMsgServerCallListener</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.orderservice.interceptors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.OrderPbEntity;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ForwardingServerCallListener;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerCall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderMsgServerCallListener</span>&lt;R&gt; <span class="keyword">extends</span> <span class="title class_">ForwardingServerCallListener</span>&lt;R&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(OrderMsgServerCallListener.class.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ServerCall.Listener&lt;R&gt; delegate;</span><br><span class="line"></span><br><span class="line">    OrderMsgServerCallListener(ServerCall.Listener&lt;R&gt; delegate) &#123;</span><br><span class="line">        <span class="built_in">this</span>.delegate = delegate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> ServerCall.Listener&lt;R&gt; <span class="title function_">delegate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(R message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(message <span class="keyword">instanceof</span> OrderPbEntity.GetOrderListReq)&#123;</span><br><span class="line">            OrderPbEntity.<span class="type">GetOrderListReq</span> <span class="variable">req</span> <span class="operator">=</span> (OrderPbEntity.GetOrderListReq)message;</span><br><span class="line">            <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> req.getUserId();</span><br><span class="line">            logger.info(<span class="string">&quot;userId:&quot;</span>+userId);</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(<span class="string">&quot;Message Received from Client -&gt; Service &quot;</span> + message);</span><br><span class="line">        <span class="built_in">super</span>.onMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>ParamsInterceptor</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.orderservice.interceptors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ParamsInterceptor</span> <span class="keyword">implements</span> <span class="title class_">ServerInterceptor</span> &#123;</span><br><span class="line">    <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(<span class="built_in">this</span>.getClass().getName());</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;ReqT, RespT&gt; ServerCall.Listener&lt;ReqT&gt; <span class="title function_">interceptCall</span><span class="params">(ServerCall&lt;ReqT, RespT&gt; call, Metadata headers, ServerCallHandler&lt;ReqT, RespT&gt; next)</span> &#123;</span><br><span class="line">        logger.info(<span class="string">&quot;======= [Server Interceptor] : Remote Method Invoked - &quot;</span> + call.getMethodDescriptor().getFullMethodName());</span><br><span class="line">        ServerCall&lt;ReqT, RespT&gt; serverCall = <span class="keyword">new</span> <span class="title class_">OrderMsgServerCall</span>&lt;&gt;(call);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OrderMsgServerCallListener</span>&lt;&gt;(next.startCall(serverCall, headers));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、服务启动注入拦截器"><a href="#4、服务启动注入拦截器" class="headerlink" title="4、服务启动注入拦截器"></a>4、服务启动注入拦截器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.orderservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.impl.OrderServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.interceptors.ParamsInterceptor;</span><br><span class="line"><span class="keyword">import</span> io.grpc.Server;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerBuilder;</span><br><span class="line"><span class="keyword">import</span> io.grpc.protobuf.services.ProtoReflectionService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGreeting</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">App</span>().getGreeting());</span><br><span class="line"></span><br><span class="line">        <span class="type">Server</span> <span class="variable">server</span> <span class="operator">=</span> ServerBuilder.forPort(<span class="number">10082</span>).intercept(<span class="keyword">new</span> <span class="title class_">ParamsInterceptor</span>()).addService(<span class="keyword">new</span> <span class="title class_">OrderServiceImpl</span>())</span><br><span class="line">                .addService(ProtoReflectionService.newInstance())</span><br><span class="line">                .build();</span><br><span class="line">        server.start();</span><br><span class="line">        server.awaitTermination();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、Java客户端拦截"><a href="#二、Java客户端拦截" class="headerlink" title="二、Java客户端拦截"></a>二、Java客户端拦截</h2><ul><li>客户端启动类 直接注入拦截器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This Java source file was generated by the Gradle &#x27;init&#x27; task.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.examples.orderservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.OrderPbEntity;</span><br><span class="line"><span class="keyword">import</span> com.example.orderservice.OrderServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> io.grpc.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">managedChannel</span> <span class="operator">=</span> ManagedChannelBuilder.forAddress(<span class="string">&quot;localhost&quot;</span>,<span class="number">10082</span>)</span><br><span class="line">                .usePlaintext()</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">Channel</span> <span class="variable">channel</span> <span class="operator">=</span> ClientInterceptors.intercept(managedChannel, <span class="keyword">new</span> <span class="title class_">ClientInterceptor</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> &lt;ReqT, RespT&gt; ClientCall&lt;ReqT, RespT&gt; <span class="title function_">interceptCall</span><span class="params">(MethodDescriptor&lt;ReqT, RespT&gt; method, CallOptions callOptions, Channel next)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;method:&quot;</span>+method.getFullMethodName());</span><br><span class="line">                <span class="keyword">return</span> next.newCall(method,callOptions);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        OrderServiceGrpc.<span class="type">OrderServiceBlockingStub</span> <span class="variable">orderServiceBlockingStub</span> <span class="operator">=</span> OrderServiceGrpc.newBlockingStub(channel);</span><br><span class="line"></span><br><span class="line">        OrderPbEntity.<span class="type">GetOrderListReq</span> <span class="variable">req</span> <span class="operator">=</span> OrderPbEntity.GetOrderListReq.newBuilder().setUserId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        OrderPbEntity.<span class="type">GetOrderListRes</span> <span class="variable">orderList</span> <span class="operator">=</span> orderServiceBlockingStub.getOrderList(req);</span><br><span class="line">        <span class="keyword">for</span> (String orderId : orderList.getOrderIdsList()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;orderId:&quot;</span>+orderId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Go服务端拦截器"><a href="#三、Go服务端拦截器" class="headerlink" title="三、Go服务端拦截器"></a>三、Go服务端拦截器</h2><p>grpc-go除了支持客户端和服务端拦截外还区分开了流式拦截和普通一元拦截，由于处理方式基本一致这里只展示普通rpc请求的拦截</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/reflection&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part03-interceptor/go/server/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> OrderServiceImpl <span class="keyword">struct</span> &#123;</span><br><span class="line">pb.UnimplementedOrderServiceServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(impl *OrderServiceImpl)</span></span> GetOrderList(ctx context.Context, req *pb.GetOrderListReq) (*pb.GetOrderListRes, <span class="type">error</span>) &#123;</span><br><span class="line">userId := req.UserId</span><br><span class="line">log.Printf(<span class="string">&quot;userId:%s&quot;</span>,userId)</span><br><span class="line">orderIds:=[]<span class="type">string</span>&#123;<span class="string">&quot;order_go_1&quot;</span>,<span class="string">&quot;order_go_2&quot;</span>,<span class="string">&quot;order_go_3&quot;</span>&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.GetOrderListRes&#123;OrderIds: orderIds&#125;,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Server :: Unary Interceptor</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">orderUnaryServerInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span></span> (<span class="keyword">interface</span>&#123;&#125;, <span class="type">error</span>) &#123;</span><br><span class="line"><span class="comment">// Pre-processing logic</span></span><br><span class="line"><span class="comment">// Gets info about the current RPC call by examining the args passed in</span></span><br><span class="line">log.Println(<span class="string">&quot;======= [Server Interceptor] &quot;</span>, info.FullMethod)</span><br><span class="line">log.Printf(<span class="string">&quot; Pre Proc Message : %s&quot;</span>, req)</span><br><span class="line"><span class="comment">// Invoking the handler to complete the normal execution of a unary RPC.</span></span><br><span class="line">m, err := handler(ctx, req)</span><br><span class="line"><span class="comment">// Post processing logic</span></span><br><span class="line">log.Printf(<span class="string">&quot; Post Proc Message : %s&quot;</span>, m)</span><br><span class="line"><span class="keyword">return</span> m, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">listen, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:10082&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">server :=grpc.NewServer(grpc.ChainUnaryInterceptor(orderUnaryServerInterceptor))</span><br><span class="line">reflection.Register(server)</span><br><span class="line">pb.RegisterOrderServiceServer(server,&amp;OrderServiceImpl&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err = server.Serve(listen) ;err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、客户端拦截"><a href="#四、客户端拦截" class="headerlink" title="四、客户端拦截"></a>四、客户端拦截</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part03-interceptor/go/client/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">orderUnaryClientInterceptor</span><span class="params">(ctx context.Context, method <span class="type">string</span>, req, reply <span class="keyword">interface</span>&#123;&#125;, cc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption)</span></span> <span class="type">error</span> &#123;</span><br><span class="line"><span class="comment">// Pre-processor phase</span></span><br><span class="line">log.Println(<span class="string">&quot;Method : &quot;</span> + method)</span><br><span class="line"><span class="comment">// Invoking the remote method</span></span><br><span class="line">err := invoker(ctx, method, req, reply, cc, opts...)</span><br><span class="line"><span class="comment">// Post-processor phase</span></span><br><span class="line">log.Println(reply)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">dial, err := grpc.Dial(<span class="string">&quot;localhost:10082&quot;</span>, grpc.WithTransportCredentials(insecure.NewCredentials()),</span><br><span class="line">grpc.WithChainUnaryInterceptor(orderUnaryClientInterceptor),</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;<span class="built_in">panic</span>(err)&#125;</span><br><span class="line"></span><br><span class="line">client := pb.NewOrderServiceClient(dial)</span><br><span class="line">list, err := client.GetOrderList(context.Background(), &amp;pb.GetOrderListReq&#123;UserId: <span class="string">&quot;go_client_userId&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;err:%v&quot;</span>,err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;list:%v&quot;</span>,list.OrderIds)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;三、拦截器&quot;&gt;&lt;a href=&quot;#三、拦截器&quot; class=&quot;headerlink&quot; title=&quot;三、拦截器&quot;&gt;&lt;/a&gt;三、拦截器&lt;/h1&gt;&lt;p&gt;基本市面上所有框架都是支持拦截器的，gRPC也不例外。grpc支持客户端和服务端拦截以下是Java和go语言的实现。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grpc in action(一) 快速开始</title>
    <link href="http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%B8%80-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/"/>
    <id>http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%B8%80-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</id>
    <published>2022-12-25T05:20:16.000Z</published>
    <updated>2022-12-25T07:42:35.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、快速开始"><a href="#一、快速开始" class="headerlink" title="一、快速开始"></a>一、快速开始</h1><h2 id="1、定义一个服务-useinfo-proto"><a href="#1、定义一个服务-useinfo-proto" class="headerlink" title="1、定义一个服务-useinfo.proto"></a>1、定义一个服务-useinfo.proto</h2><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;<span class="comment">//标识 proto版本 建议使用proto3</span></span><br><span class="line"><span class="keyword">package</span> userinfoservice;<span class="comment">//proto包名 避免命名冲突，也可以作为引入其他proto文件时使用</span></span><br><span class="line"><span class="keyword">option</span> java_package = <span class="string">&quot;com.example.userinfoservice&quot;</span> ;<span class="comment">//生成的类将带有此包名，不指定则使用package</span></span><br><span class="line"><span class="keyword">option</span> cc_generic_services = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;./pb&quot;</span>;</span><br><span class="line"><span class="keyword">option</span> java_outer_classname = <span class="string">&quot;UserInfoEntity&quot;</span>;<span class="comment">//指定生成后的类名，里面会包含req/res,不指定则使用文件名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> name = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int32</span> age = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">service </span><span class="title class_">UserInfoService</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> getUserInfo(GetUserInfoReq) <span class="keyword">returns</span> (GetUserInfoRes)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、通过proto文件生成代码"><a href="#2、通过proto文件生成代码" class="headerlink" title="2、通过proto文件生成代码"></a>2、通过proto文件生成代码</h2><h3 id="1-Go"><a href="#1-Go" class="headerlink" title="1) Go"></a>1) Go</h3><ul><li><strong>安装protoc命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28</span><br><span class="line">$ go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2</span><br><span class="line">$ <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="subst">$(go env GOPATH)</span>/bin&quot;</span></span><br></pre></td></tr></table></figure><ul><li><strong>生成userinfo.pb.go文件和userinfo_grpc.pb.go</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protoc --go_out=. --go_opt=paths=source_relative \</span><br><span class="line">    --go-grpc_out=. --go-grpc_opt=paths=source_relative \</span><br><span class="line">    proto/userinfo.proto</span><br></pre></td></tr></table></figure><h3 id="2-Java"><a href="#2-Java" class="headerlink" title="2) Java"></a>2) Java</h3><ul><li><p>将你的proto文件放到src&#x2F;main&#x2F;proto和src&#x2F;test&#x2F;proto目录，并配置生成代码的插件</p></li><li><p>Gradle生成代码插件：</p>  <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This file was generated by the Gradle &#x27;init&#x27; task.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This generated file contains a sample Java application project to get you started.</span></span><br><span class="line"><span class="comment"> * For more details take a look at the &#x27;Building Java &amp; JVM projects&#x27; chapter in the Gradle</span></span><br><span class="line"><span class="comment"> * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    <span class="comment">// Apply the application plugin to add support for building a CLI application in Java.</span></span><br><span class="line">    id <span class="string">&#x27;application&#x27;</span></span><br><span class="line">    <span class="comment">// ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions</span></span><br><span class="line">    id <span class="string">&#x27;com.google.protobuf&#x27;</span> version <span class="string">&#x27;0.8.17&#x27;</span></span><br><span class="line">    <span class="comment">// Generate IntelliJ IDEA&#x27;s .idea &amp; .iml project files</span></span><br><span class="line">    id <span class="string">&#x27;idea&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;java&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">1.8</span></span><br><span class="line">targetCompatibility = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    <span class="comment">// Use Maven Central for resolving dependencies.</span></span><br><span class="line">    mavenCentral()</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/google/&#x27;</span> &#125;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/jcenter/&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">def</span> grpcVersion = <span class="string">&#x27;1.48.0&#x27;</span> <span class="comment">// CURRENT_GRPC_VERSION</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// Use JUnit test framework.</span></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.13.2&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// This dependency is used by the application.</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.guava:guava:30.1.1-jre&#x27;</span></span><br><span class="line">    implementation <span class="string">&quot;io.grpc:grpc-netty:$&#123;grpcVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;io.grpc:grpc-protobuf:$&#123;grpcVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;io.grpc:grpc-services:$&#123;grpcVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;io.grpc:grpc-stub:$&#123;grpcVersion&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    <span class="comment">// Define the main class for the application.</span></span><br><span class="line">    mainClass = <span class="string">&#x27;client.MainApplication&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">protobuf &#123;</span><br><span class="line">    protoc &#123;</span><br><span class="line">        artifact = <span class="string">&quot;com.google.protobuf:protoc:3.2.0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    plugins &#123;</span><br><span class="line">        grpc &#123;</span><br><span class="line">            artifact = <span class="string">&#x27;io.grpc:protoc-gen-grpc-java:1.4.0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    generateProtoTasks &#123;</span><br><span class="line">        all()*.plugins &#123;</span><br><span class="line">            grpc &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Maven生成代码插件：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">  &lt;extensions&gt;</span><br><span class="line">    &lt;extension&gt;</span><br><span class="line">      &lt;groupId&gt;kr.motd.maven&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;os-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.1.Final&lt;/version&gt;</span><br><span class="line">    &lt;/extension&gt;</span><br><span class="line">  &lt;/extensions&gt;</span><br><span class="line">  &lt;plugins&gt;</span><br><span class="line">    &lt;plugin&gt;</span><br><span class="line">      &lt;groupId&gt;org.xolstice.maven.plugins&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;protobuf-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;0.5.0&lt;/version&gt;</span><br><span class="line">      &lt;configuration&gt;</span><br><span class="line">        &lt;protocArtifact&gt;com.google.protobuf:protoc:3.3.0:exe:<span class="variable">$&#123;os.detected.classifier&#125;</span>&lt;/protocArtifact&gt;</span><br><span class="line">        &lt;pluginId&gt;grpc-java&lt;/pluginId&gt;</span><br><span class="line">        &lt;pluginArtifact&gt;io.grpc:protoc-gen-grpc-java:1.4.0:exe:<span class="variable">$&#123;os.detected.classifier&#125;</span>&lt;/pluginArtifact&gt;</span><br><span class="line">      &lt;/configuration&gt;</span><br><span class="line">      &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">          &lt;goals&gt;</span><br><span class="line">            &lt;goal&gt;compile&lt;/goal&gt;</span><br><span class="line">            &lt;goal&gt;compile-custom&lt;/goal&gt;</span><br><span class="line">          &lt;/goals&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">      &lt;/executions&gt;</span><br><span class="line">    &lt;/plugin&gt;</span><br><span class="line">  &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure><h2 id="3、对应生成服务端和客户端"><a href="#3、对应生成服务端和客户端" class="headerlink" title="3、对应生成服务端和客户端"></a>3、对应生成服务端和客户端</h2><p><strong>（1 ）Java 服务端</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.userinfoservice.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.UserInfoEntity;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.UserInfoServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.entity.UserInfoData;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">UserInfoServiceGrpc</span>.UserInfoServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, UserInfoData&gt; userinfoHashMap = Maps.newHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserInfo</span><span class="params">(UserInfoEntity.GetUserInfoReq request, StreamObserver&lt;UserInfoEntity.GetUserInfoRes&gt; responseObserver)</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;java服务收到请求&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(request.getId()))&#123;</span><br><span class="line">            responseObserver.onError(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;id不能为空&quot;</span>));</span><br><span class="line">            responseObserver.onCompleted();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userinfoHashMap.isEmpty())&#123;</span><br><span class="line">            initUserInfoHashMap();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">UserInfoData</span> <span class="variable">userInfoData</span> <span class="operator">=</span> userinfoHashMap.get(request.getId());</span><br><span class="line">        <span class="keyword">if</span> (userInfoData == <span class="literal">null</span>)&#123;</span><br><span class="line">            responseObserver.onError(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;id不能为空&quot;</span>));</span><br><span class="line">            responseObserver.onCompleted();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        responseObserver.onNext(UserInfoEntity.GetUserInfoRes.newBuilder()</span><br><span class="line">                .setId(userInfoData.getId())</span><br><span class="line">                .setName(userInfoData.getName())</span><br><span class="line">                .setAge(userInfoData.getAge())</span><br><span class="line">                .build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initUserInfoHashMap</span><span class="params">()</span> &#123;</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;1&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;小美&quot;</span>,<span class="number">24</span>));</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;2&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;小强&quot;</span>,<span class="number">28</span>));</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;3&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;小刚&quot;</span>,<span class="number">30</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实体 UserInfoData</li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.userinfoservice.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInfoData</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInfoData</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInfoData</span><span class="params">(String id, String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>服务主类 App</li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This Java source file was generated by the Gradle &#x27;init&#x27; task.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.example.userinfoservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.impl.UserInfoServiceImpl;</span><br><span class="line"><span class="keyword">import</span> io.grpc.Server;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ServerBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGreeting</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(App.class.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Server server;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">10080</span>;</span><br><span class="line">        server = ServerBuilder.forPort(port)</span><br><span class="line">                .addService(<span class="keyword">new</span> <span class="title class_">UserInfoServiceImpl</span>())</span><br><span class="line">                .build()</span><br><span class="line">                .start();</span><br><span class="line">        logger.info(<span class="string">&quot;Server started, listening on &quot;</span> + port);</span><br><span class="line">        Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="comment">// Use stderr here since the logger may have been reset by its JVM shutdown hook.</span></span><br><span class="line">            logger.info(<span class="string">&quot;*** shutting down gRPC server since JVM is shutting down&quot;</span>);</span><br><span class="line">            App.<span class="built_in">this</span>.stop();</span><br><span class="line">            logger.info(<span class="string">&quot;*** server shut down&quot;</span>);</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (server != <span class="literal">null</span>) &#123;</span><br><span class="line">            server.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Await termination on the main thread since the grpc library uses daemon threads.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">blockUntilShutdown</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (server != <span class="literal">null</span>) &#123;</span><br><span class="line">            server.awaitTermination();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Main launches the server from the command line.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">App</span> <span class="variable">server</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">App</span>();</span><br><span class="line">        server.start();</span><br><span class="line">        server.blockUntilShutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）Java 客户端</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.userinfoservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.ManagedChannel;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ManagedChannelBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(MainApplication.class.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">channel</span> <span class="operator">=</span> ManagedChannelBuilder.forAddress(<span class="string">&quot;localhost&quot;</span>, <span class="number">10080</span>)</span><br><span class="line">                .usePlaintext()</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        UserInfoServiceGrpc.<span class="type">UserInfoServiceBlockingStub</span> <span class="variable">stub</span> <span class="operator">=</span></span><br><span class="line">                UserInfoServiceGrpc.newBlockingStub(channel);</span><br><span class="line"></span><br><span class="line">        Userinfo.<span class="type">GetUserInfoRes</span> <span class="variable">res</span> <span class="operator">=</span> stub.getUserInfo(</span><br><span class="line">                Userinfo.GetUserInfoReq.newBuilder()</span><br><span class="line">                        .setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        logger.info(<span class="string">&quot;用户id: &quot;</span> + res.getId() + <span class="string">&quot;\t用户姓名:&quot;</span>+ res.getName()</span><br><span class="line">        +<span class="string">&quot;\t用户年龄:&quot;</span>+ res.getAge());</span><br><span class="line">        channel.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）go 服务端</strong></p><ul><li>实现用户服务</li></ul>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> serviceimpl</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;errors&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part1/go/server/pb&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Id <span class="type">string</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">Age <span class="type">int32</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> UserInfoServiceImpl <span class="keyword">struct</span> &#123;</span><br><span class="line">UserInfoData <span class="keyword">map</span>[<span class="type">string</span>]*UserInfo</span><br><span class="line">pb.UnimplementedUserInfoServiceServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *UserInfoServiceImpl)</span></span> GetUserInfo(ctx context.Context, in *pb.GetUserInfoReq) (*pb.GetUserInfoRes, <span class="type">error</span>)  &#123;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;go server收到请求&quot;</span>)</span><br><span class="line"><span class="comment">//初始化一个map</span></span><br><span class="line"><span class="keyword">if</span> server.UserInfoData == <span class="literal">nil</span>&#123;</span><br><span class="line">server.initUserInfoData()</span><br><span class="line">&#125;</span><br><span class="line">data:= server.UserInfoData[in.Id]</span><br><span class="line"><span class="keyword">if</span> data == <span class="literal">nil</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,errors.New(<span class="string">&quot;该id不存在&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">res := &amp;pb.GetUserInfoRes&#123;</span><br><span class="line">Id:   data.Id,</span><br><span class="line">Name: data.Name,</span><br><span class="line">Age:  data.Age,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> res,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *UserInfoServiceImpl)</span></span> initUserInfoData ()&#123;</span><br><span class="line">server.UserInfoData = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]*UserInfo)</span><br><span class="line"></span><br><span class="line">server.UserInfoData[<span class="string">&quot;1&quot;</span>] = &amp;UserInfo&#123;</span><br><span class="line">Id:   <span class="string">&quot;1&quot;</span>,</span><br><span class="line">Name: <span class="string">&quot;小美&quot;</span>,</span><br><span class="line">Age:  <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line">server.UserInfoData[<span class="string">&quot;2&quot;</span>] = &amp;UserInfo&#123;</span><br><span class="line">Id:   <span class="string">&quot;2&quot;</span>,</span><br><span class="line">Name: <span class="string">&quot;小刚&quot;</span>,</span><br><span class="line">Age:  <span class="number">28</span>,</span><br><span class="line">&#125;</span><br><span class="line">server.UserInfoData[<span class="string">&quot;3&quot;</span>] = &amp;UserInfo&#123;</span><br><span class="line">Id:   <span class="string">&quot;3&quot;</span>,</span><br><span class="line">Name: <span class="string">&quot;小王&quot;</span>,</span><br><span class="line">Age:  <span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>服务主类</li></ul>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/reflection&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part1/go/server/pb&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part1/go/server/serviceimpl&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">lis, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:10080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;failed to listen: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">s := grpc.NewServer()</span><br><span class="line">ser := &amp;serviceimpl.UserInfoServiceImpl&#123;&#125;</span><br><span class="line">pb.RegisterUserInfoServiceServer(s,ser)</span><br><span class="line">log.Printf(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">reflection.Register(s)</span><br><span class="line"><span class="keyword">if</span> err := s.Serve(lis); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;failed to serve: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（4）go 客户端</strong></p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">package</span> main</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line">  <span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">  <span class="string">&quot;grpc-in-action/part1/go/client/pb&quot;</span></span><br><span class="line">  <span class="string">&quot;log&quot;</span></span><br><span class="line">  )</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Set up a connection to the server.</span></span><br><span class="line">  conn, err := grpc.Dial(<span class="string">&quot;localhost:10080&quot;</span>,grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  log.Fatalf(<span class="string">&quot;did not connect: %v&quot;</span>, err)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">defer</span> conn.Close()</span><br><span class="line">  c := pb.NewUserInfoServiceClient(conn)</span><br><span class="line">  req:= &amp;pb.GetUserInfoReq&#123;Id: <span class="string">&quot;1&quot;</span>&#125;</span><br><span class="line">  res,err :=c.GetUserInfo(context.Background(),req)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  log.Fatalf(<span class="string">&quot;err:%+v&quot;</span>,err)</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  log.Printf(<span class="string">&quot;res:%+v&quot;</span>,res)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、快速开始&quot;&gt;&lt;a href=&quot;#一、快速开始&quot; class=&quot;headerlink&quot; title=&quot;一、快速开始&quot;&gt;&lt;/a&gt;一、快速开始&lt;/h1&gt;&lt;h2 id=&quot;1、定义一个服务-useinfo-proto&quot;&gt;&lt;a href=&quot;#1、定义一个服务-useinf</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grpc in action(二) stream</title>
    <link href="http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%BA%8C-stream/"/>
    <id>http://dreamerpxy.github.io/2022/12/25/Grpc-in-action/Grpc-in-action-%E4%BA%8C-stream/</id>
    <published>2022-12-25T05:19:28.000Z</published>
    <updated>2022-12-25T05:19:49.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二、流式传输"><a href="#二、流式传输" class="headerlink" title="二、流式传输"></a>二、流式传输</h1><p>我们第一节学习的是简单一元数据传输，也就是在rpc中最常见的一个请求对应一个响应。但往往在实际开发中可能有这样的场景：用户app位置上报、服务端大文件下发等这种持续字节流的情况。Grpc贴心的针对这些情况设置了三种流式传输模式：<strong>客户端流、服务端流、客户端服务端双向流传输</strong></p><h2 id="1、客户端单向流"><a href="#1、客户端单向流" class="headerlink" title="1、客户端单向流"></a>1、客户端单向流</h2><p>现在我们在proto文件中创建一个客户端上报流数据的rpc方法 - <strong>reportUserBehavior</strong></p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;<span class="comment">//标识 proto版本 建议使用proto3</span></span><br><span class="line"><span class="keyword">package</span> userinfoservice;<span class="comment">//proto包名 避免命名冲突，也可以作为引入其他proto文件时使用</span></span><br><span class="line"><span class="keyword">option</span> java_package = <span class="string">&quot;com.example.userinfoservice&quot;</span> ;<span class="comment">//生成的类将带有此包名，不指定则使用package</span></span><br><span class="line"><span class="keyword">option</span> cc_generic_services = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;./pb&quot;</span>;</span><br><span class="line"><span class="keyword">option</span> java_outer_classname = <span class="string">&quot;UserInfoEntity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> name = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int32</span> age = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ReportUserBehaviorReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> behavior = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ReportUserBehaviorRes</span>&#123;</span><br><span class="line">  <span class="type">int32</span> retCode = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> retMsg = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int64</span> receivedCount = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">service </span><span class="title class_">UserInfoService</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> getUserInfo(GetUserInfoReq) <span class="keyword">returns</span> (GetUserInfoRes)</span>;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> reportUserBehavior(stream ReportUserBehaviorReq) <span class="keyword">returns</span> (ReportUserBehaviorRes)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>reportUserBehavior 模拟的是客户端上报用户行为的例子，在日常开发中，这种场景很常见，比如打点环节里可能需要将用户的一系列的行为操作上报。我们使用go和Java分别来实现这个案例：</p><ul><li><strong>go语言实现</strong></li></ul><p>a、通过protoc生成代码并实现客户端代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part02-stream/go/client/pb&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn,err:= grpc.Dial(<span class="string">&quot;localhost:10081&quot;</span>,grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;did not connect: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line">c := pb.NewUserInfoServiceClient(conn)</span><br><span class="line"></span><br><span class="line">ReportUserBehavior(c)<span class="comment">//客户端stream</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ReportUserBehavior</span><span class="params">(c pb.UserInfoServiceClient)</span></span> &#123;</span><br><span class="line">req:=&amp;pb.ReportUserBehaviorReq&#123;</span><br><span class="line">Id:       <span class="string">&quot;1&quot;</span>,</span><br><span class="line">Behavior: <span class="string">&quot;起床&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req1:=&amp;pb.ReportUserBehaviorReq&#123;</span><br><span class="line">Id:       <span class="string">&quot;1&quot;</span>,</span><br><span class="line">Behavior: <span class="string">&quot;洗漱&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req2:=&amp;pb.ReportUserBehaviorReq&#123;</span><br><span class="line">Id:       <span class="string">&quot;1&quot;</span>,</span><br><span class="line">Behavior: <span class="string">&quot;上班&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">context,cancel := context.WithTimeout(context.Background(),time.Second *<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line">bhClient ,err := c.ReportUserBehavior(context)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err= bhClient.Send(req);err!=<span class="literal">nil</span>&#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err= bhClient.Send(req);err!=<span class="literal">nil</span>&#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err= bhClient.Send(req1);err!=<span class="literal">nil</span>&#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err= bhClient.Send(req2);err!=<span class="literal">nil</span>&#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">bhRes, err := bhClient.CloseAndRecv()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;%v.CloseAndRecv() got error %v, want %v&quot;</span>, bhClient, err, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;Update Orders Res : %s&quot;</span>, bhRes)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>b、go服务端支持</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> impl</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;errors&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-in-action/part02-stream/go/server/pb&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> StreamUserInfoServiceImpl <span class="keyword">struct</span> &#123;</span><br><span class="line">UserLocationTmp <span class="keyword">map</span>[<span class="type">string</span>][]UserLocTmp</span><br><span class="line">UserInfoData <span class="keyword">map</span>[<span class="type">string</span>]*UserInfo</span><br><span class="line">pb.UnimplementedUserInfoServiceServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserLocTmp <span class="keyword">struct</span> &#123;</span><br><span class="line">Loc <span class="type">string</span></span><br><span class="line">Temperature <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Id <span class="type">string</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">Age <span class="type">int32</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *StreamUserInfoServiceImpl)</span></span> GetUserInfo(ctx context.Context, in *pb.GetUserInfoReq) (*pb.GetUserInfoRes, <span class="type">error</span>)  &#123;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;go stream server收到请求&quot;</span>)</span><br><span class="line"><span class="comment">//初始化一个map</span></span><br><span class="line"><span class="keyword">if</span> server.UserInfoData == <span class="literal">nil</span>&#123;</span><br><span class="line">server.initUserInfoData()</span><br><span class="line">&#125;</span><br><span class="line">data:= server.UserInfoData[in.Id]</span><br><span class="line"><span class="keyword">if</span> data == <span class="literal">nil</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,errors.New(<span class="string">&quot;该id不存在&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">res := &amp;pb.GetUserInfoRes&#123;</span><br><span class="line">Id:   data.Id,</span><br><span class="line">Name: data.Name,</span><br><span class="line">Age:  data.Age,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> res,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *StreamUserInfoServiceImpl)</span></span> ReportUserBehavior(stream pb.UserInfoService_ReportUserBehaviorServer) <span class="type">error</span>  &#123;</span><br><span class="line"></span><br><span class="line">res:= pb.ReportUserBehaviorRes&#123;</span><br><span class="line">RetCode: <span class="number">0</span>,</span><br><span class="line">RetMsg: <span class="string">&quot;收到收到~&quot;</span>,</span><br><span class="line">ReceivedCount: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">behaviorData, err := stream.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="comment">// 结束符 客户端停止发送</span></span><br><span class="line"><span class="keyword">return</span> stream.SendAndClose(&amp;res)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//此处有并发问题 只是简单演示</span></span><br><span class="line">res.ReceivedCount+=<span class="number">1</span></span><br><span class="line">log.Printf(<span class="string">&quot;用户 ID : %s -行为： %s&quot;</span>, behaviorData.Id, behaviorData.Behavior)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *StreamUserInfoServiceImpl)</span></span> initUserInfoData ()&#123;</span><br><span class="line">server.UserInfoData = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]*UserInfo)</span><br><span class="line"></span><br><span class="line">server.UserInfoData[<span class="string">&quot;1&quot;</span>] = &amp;UserInfo&#123;</span><br><span class="line">Id:   <span class="string">&quot;1&quot;</span>,</span><br><span class="line">Name: <span class="string">&quot;小美&quot;</span>,</span><br><span class="line">Age:  <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line">server.UserInfoData[<span class="string">&quot;2&quot;</span>] = &amp;UserInfo&#123;</span><br><span class="line">Id:   <span class="string">&quot;2&quot;</span>,</span><br><span class="line">Name: <span class="string">&quot;小刚&quot;</span>,</span><br><span class="line">Age:  <span class="number">28</span>,</span><br><span class="line">&#125;</span><br><span class="line">server.UserInfoData[<span class="string">&quot;3&quot;</span>] = &amp;UserInfo&#123;</span><br><span class="line">Id:   <span class="string">&quot;3&quot;</span>,</span><br><span class="line">Name: <span class="string">&quot;小王&quot;</span>,</span><br><span class="line">Age:  <span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *StreamUserInfoServiceImpl)</span></span> initUserLocationTmp() &#123;</span><br><span class="line">server.UserLocationTmp = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>][]UserLocTmp)</span><br><span class="line"><span class="keyword">var</span> data []UserLocTmp</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">t := UserLocTmp&#123;</span><br><span class="line">Loc: <span class="string">&quot;北京&quot;</span>,</span><br><span class="line">Temperature :<span class="string">&quot;26.5&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">data = <span class="built_in">append</span>(data,t)</span><br><span class="line">&#125;</span><br><span class="line">server.UserLocationTmp[<span class="string">&quot;1&quot;</span>] = data</span><br><span class="line">server.UserLocationTmp[<span class="string">&quot;2&quot;</span>] = data</span><br><span class="line">server.UserLocationTmp[<span class="string">&quot;3&quot;</span>] = data</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Java语言实现</strong></li></ul><p>a、通过Gradle插件生成代码并实现客户端代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.userinfoservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.grpc.ManagedChannel;</span><br><span class="line"><span class="keyword">import</span> io.grpc.ManagedChannelBuilder;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(App.class.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ManagedChannel</span> <span class="variable">channel</span> <span class="operator">=</span> ManagedChannelBuilder.forAddress(<span class="string">&quot;localhost&quot;</span>, <span class="number">10081</span>)</span><br><span class="line">                .usePlaintext()</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        UserInfoServiceGrpc.<span class="type">UserInfoServiceBlockingStub</span> <span class="variable">stub</span> <span class="operator">=</span></span><br><span class="line">                UserInfoServiceGrpc.newBlockingStub(channel);</span><br><span class="line"></span><br><span class="line">        GetUserInfo(stub);</span><br><span class="line">        <span class="comment">//客户端流</span></span><br><span class="line">        UserInfoServiceGrpc.<span class="type">UserInfoServiceStub</span> <span class="variable">asyncStub</span> <span class="operator">=</span> UserInfoServiceGrpc.newStub(channel);</span><br><span class="line">        ReportUserBehavior(asyncStub);</span><br><span class="line"></span><br><span class="line">        channel.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ReportUserBehavior</span><span class="params">(UserInfoServiceGrpc.UserInfoServiceStub stub)</span> &#123;</span><br><span class="line">        <span class="type">CountDownLatch</span> <span class="variable">finishLatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(<span class="number">1</span>);</span><br><span class="line">        StreamObserver&lt;UserInfoEntity.ReportUserBehaviorRes&gt; responseObserver = <span class="keyword">new</span> <span class="title class_">StreamObserver</span>&lt;UserInfoEntity.ReportUserBehaviorRes&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(UserInfoEntity.ReportUserBehaviorRes value)</span> &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;Report User Behavior RetCode: &quot;</span> + value.getRetCode() + <span class="string">&quot; RetMsg: &quot;</span> + value.getRetMsg());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;此次流处理完成&quot;</span>);</span><br><span class="line">                finishLatch.countDown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        StreamObserver&lt;UserInfoEntity.ReportUserBehaviorReq&gt; reportUserBehaviorReqStreamObserver = stub.reportUserBehavior(responseObserver);</span><br><span class="line">        reportUserBehaviorReqStreamObserver.onNext(UserInfoEntity.ReportUserBehaviorReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setBehavior(<span class="string">&quot;下班&quot;</span>).build());</span><br><span class="line">        reportUserBehaviorReqStreamObserver.onNext(UserInfoEntity.ReportUserBehaviorReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setBehavior(<span class="string">&quot;回家&quot;</span>).build());</span><br><span class="line">        reportUserBehaviorReqStreamObserver.onNext(UserInfoEntity.ReportUserBehaviorReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setBehavior(<span class="string">&quot;做饭&quot;</span>).build());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (finishLatch.getCount() == <span class="number">0</span>) &#123;</span><br><span class="line">            logger.warning(<span class="string">&quot;RPC completed or errored before we finished sending.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        reportUserBehaviorReqStreamObserver.onCompleted();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!finishLatch.await(<span class="number">10</span>, TimeUnit.SECONDS)) &#123;</span><br><span class="line">                logger.warning(<span class="string">&quot;FAILED : Process orders cannot finish within 10 seconds&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">GetUserInfo</span><span class="params">(UserInfoServiceGrpc.UserInfoServiceBlockingStub stub)</span> &#123;</span><br><span class="line"></span><br><span class="line">        UserInfoEntity.<span class="type">GetUserInfoRes</span> <span class="variable">res</span> <span class="operator">=</span> stub.getUserInfo(</span><br><span class="line">                UserInfoEntity.GetUserInfoReq.newBuilder()</span><br><span class="line">                        .setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        logger.info(<span class="string">&quot;用户id: &quot;</span> + res.getId() + <span class="string">&quot;\t用户姓名:&quot;</span>+ res.getName()</span><br><span class="line">                +<span class="string">&quot;\t用户年龄:&quot;</span>+ res.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>b、服务端支持</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.userinfoservice.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.UserInfoEntity;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.UserInfoServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.entity.UserInfoData;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">UserInfoServiceGrpc</span>.UserInfoServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, UserInfoData&gt; userinfoHashMap = Maps.newHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserInfo</span><span class="params">(UserInfoEntity.GetUserInfoReq request, StreamObserver&lt;UserInfoEntity.GetUserInfoRes&gt; responseObserver)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;java服务收到请求&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(request.getId()))&#123;</span><br><span class="line">            responseObserver.onError(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;id不能为空&quot;</span>));</span><br><span class="line">            responseObserver.onCompleted();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userinfoHashMap.isEmpty())&#123;</span><br><span class="line">            initUserInfoHashMap();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">UserInfoData</span> <span class="variable">userInfoData</span> <span class="operator">=</span> userinfoHashMap.get(request.getId());</span><br><span class="line">        <span class="keyword">if</span> (userInfoData == <span class="literal">null</span>)&#123;</span><br><span class="line">            responseObserver.onError(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;id不能为空&quot;</span>));</span><br><span class="line">            responseObserver.onCompleted();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        responseObserver.onNext(UserInfoEntity.GetUserInfoRes.newBuilder()</span><br><span class="line">                .setId(userInfoData.getId())</span><br><span class="line">                .setName(userInfoData.getName())</span><br><span class="line">                .setAge(userInfoData.getAge())</span><br><span class="line">                .build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//客户端流</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> StreamObserver&lt;UserInfoEntity.ReportUserBehaviorReq&gt; reportUserBehavior(StreamObserver&lt;UserInfoEntity.ReportUserBehaviorRes&gt; responseObserver) &#123;</span><br><span class="line">        <span class="type">AtomicInteger</span> <span class="variable">count</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line">        UserInfoEntity.ReportUserBehaviorRes.<span class="type">Builder</span> <span class="variable">res</span> <span class="operator">=</span> UserInfoEntity.ReportUserBehaviorRes.newBuilder()</span><br><span class="line">                .setRetCode(<span class="number">0</span>)</span><br><span class="line">                .setRetMsg(<span class="string">&quot;收到~~&quot;</span>);</span><br><span class="line"></span><br><span class="line">        StreamObserver&lt;UserInfoEntity.ReportUserBehaviorReq&gt; reportUserBehaviorReqStreamObserver = <span class="keyword">new</span> <span class="title class_">StreamObserver</span>&lt;UserInfoEntity.ReportUserBehaviorReq&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(UserInfoEntity.ReportUserBehaviorReq value)</span> &#123;</span><br><span class="line">                System.out.println(value.getId() + <span class="string">&quot;\t&quot;</span> + value.getBehavior());</span><br><span class="line">                count.incrementAndGet();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                res.setReceivedCount(count.get());</span><br><span class="line">                responseObserver.onNext(res.build());</span><br><span class="line"></span><br><span class="line">                responseObserver.onCompleted();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> reportUserBehaviorReqStreamObserver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initUserInfoHashMap</span><span class="params">()</span> &#123;</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;1&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;小美&quot;</span>,<span class="number">24</span>));</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;2&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;小强&quot;</span>,<span class="number">28</span>));</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;3&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;小刚&quot;</span>,<span class="number">30</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、服务端单向流"><a href="#2、服务端单向流" class="headerlink" title="2、服务端单向流"></a>2、服务端单向流</h2><p>在proto文件中创建一个服务端下发流数据的rpc方法 - <strong>supplyUserChangeInfo</strong></p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;<span class="comment">//标识 proto版本 建议使用proto3</span></span><br><span class="line"><span class="keyword">package</span> userinfoservice;<span class="comment">//proto包名 避免命名冲突，也可以作为引入其他proto文件时使用</span></span><br><span class="line"><span class="keyword">option</span> java_package = <span class="string">&quot;com.example.userinfoservice&quot;</span> ;<span class="comment">//生成的类将带有此包名，不指定则使用package</span></span><br><span class="line"><span class="keyword">option</span> cc_generic_services = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;./pb&quot;</span>;</span><br><span class="line"><span class="keyword">option</span> java_outer_classname = <span class="string">&quot;UserInfoEntity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> name = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int32</span> age = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ReportUserBehaviorReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> behavior = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ReportUserBehaviorRes</span>&#123;</span><br><span class="line">  <span class="type">int32</span> retCode = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> retMsg = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int64</span> receivedCount = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">SupplyUserChangeInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">SupplyUserChangeInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> loc = <span class="number">2</span>;</span><br><span class="line">  <span class="type">string</span> temperature = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">service </span><span class="title class_">UserInfoService</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> getUserInfo(GetUserInfoReq) <span class="keyword">returns</span> (GetUserInfoRes)</span>;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> reportUserBehavior(stream ReportUserBehaviorReq) <span class="keyword">returns</span> (ReportUserBehaviorRes)</span>;</span><br><span class="line"><span class="comment">//服务端单向流</span></span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> supplyUserChangeInfo(SupplyUserChangeInfoReq) <span class="keyword">returns</span> (stream SupplyUserChangeInfoRes)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Java语言实现</strong></li></ul><p>a、服务端实现接口对外服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.userinfoservice.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.UserInfoEntity;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.UserInfoServiceGrpc;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.entity.UserInfoData;</span><br><span class="line"><span class="keyword">import</span> com.example.userinfoservice.entity.UserLocTmp;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> io.grpc.stub.StreamObserver;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">UserInfoServiceGrpc</span>.UserInfoServiceImplBase &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, UserInfoData&gt; userinfoHashMap = Maps.newHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, List&lt;UserLocTmp&gt;&gt; userLocTmpHashMap = Maps.newHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserInfo</span><span class="params">(UserInfoEntity.GetUserInfoReq request, StreamObserver&lt;UserInfoEntity.GetUserInfoRes&gt; responseObserver)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;java服务收到请求&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(request.getId()))&#123;</span><br><span class="line">            responseObserver.onError(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;id不能为空&quot;</span>));</span><br><span class="line">            responseObserver.onCompleted();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userinfoHashMap.isEmpty())&#123;</span><br><span class="line">            initUserInfoHashMap();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">UserInfoData</span> <span class="variable">userInfoData</span> <span class="operator">=</span> userinfoHashMap.get(request.getId());</span><br><span class="line">        <span class="keyword">if</span> (userInfoData == <span class="literal">null</span>)&#123;</span><br><span class="line">            responseObserver.onError(<span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;id不能为空&quot;</span>));</span><br><span class="line">            responseObserver.onCompleted();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        responseObserver.onNext(UserInfoEntity.GetUserInfoRes.newBuilder()</span><br><span class="line">                .setId(userInfoData.getId())</span><br><span class="line">                .setName(userInfoData.getName())</span><br><span class="line">                .setAge(userInfoData.getAge())</span><br><span class="line">                .build());</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//客户端流</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> StreamObserver&lt;UserInfoEntity.ReportUserBehaviorReq&gt; reportUserBehavior(StreamObserver&lt;UserInfoEntity.ReportUserBehaviorRes&gt; responseObserver) &#123;</span><br><span class="line">        <span class="type">AtomicInteger</span> <span class="variable">count</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line">        UserInfoEntity.ReportUserBehaviorRes.<span class="type">Builder</span> <span class="variable">res</span> <span class="operator">=</span> UserInfoEntity.ReportUserBehaviorRes.newBuilder()</span><br><span class="line">                .setRetCode(<span class="number">0</span>)</span><br><span class="line">                .setRetMsg(<span class="string">&quot;收到~~&quot;</span>);</span><br><span class="line"></span><br><span class="line">        StreamObserver&lt;UserInfoEntity.ReportUserBehaviorReq&gt; reportUserBehaviorReqStreamObserver = <span class="keyword">new</span> <span class="title class_">StreamObserver</span>&lt;UserInfoEntity.ReportUserBehaviorReq&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(UserInfoEntity.ReportUserBehaviorReq value)</span> &#123;</span><br><span class="line">                System.out.println(value.getId() + <span class="string">&quot;\t&quot;</span> + value.getBehavior());</span><br><span class="line">                count.incrementAndGet();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                res.setReceivedCount(count.get());</span><br><span class="line">                responseObserver.onNext(res.build());</span><br><span class="line"></span><br><span class="line">                responseObserver.onCompleted();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> reportUserBehaviorReqStreamObserver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//服务端流</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">supplyUserChangeInfo</span><span class="params">(UserInfoEntity.SupplyUserChangeInfoReq request, StreamObserver&lt;UserInfoEntity.SupplyUserChangeInfoRes&gt; responseObserver)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> request.getId();</span><br><span class="line">        <span class="keyword">if</span> (userLocTmpHashMap.isEmpty())&#123;</span><br><span class="line">            initUserLocTmpHashMap();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;UserLocTmp&gt; userLocTmps = userLocTmpHashMap.get(id);</span><br><span class="line">        <span class="keyword">for</span> (UserLocTmp userLocTmp : userLocTmps) &#123;</span><br><span class="line">            responseObserver.onNext(UserInfoEntity.SupplyUserChangeInfoRes.newBuilder().setId(id)</span><br><span class="line">            .setLoc(userLocTmp.getLoc())</span><br><span class="line">            .setTemperature(userLocTmp.getTemperature())</span><br><span class="line">            .build());</span><br><span class="line">        &#125;</span><br><span class="line">        responseObserver.onCompleted();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initUserInfoHashMap</span><span class="params">()</span> &#123;</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;1&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;小美&quot;</span>,<span class="number">24</span>));</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;2&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;小强&quot;</span>,<span class="number">28</span>));</span><br><span class="line">        userinfoHashMap.put(<span class="string">&quot;3&quot;</span>,<span class="keyword">new</span> <span class="title class_">UserInfoData</span>(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;小刚&quot;</span>,<span class="number">30</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initUserLocTmpHashMap</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UserLocTmp</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserLocTmp</span>(<span class="string">&quot;上海&quot;</span>, <span class="string">&quot;24.5度&quot;</span>);</span><br><span class="line">        List&lt;UserLocTmp&gt; datas = Lists.newArrayList(data);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            datas.add(data);</span><br><span class="line">        &#125;</span><br><span class="line">        userLocTmpHashMap.put(<span class="string">&quot;1&quot;</span>,datas);</span><br><span class="line">        userLocTmpHashMap.put(<span class="string">&quot;2&quot;</span>,datas);</span><br><span class="line">        userLocTmpHashMap.put(<span class="string">&quot;3&quot;</span>,datas);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>b、客户端接受服务端下发数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">SupplyUserChangeInfo</span><span class="params">(UserInfoServiceGrpc.UserInfoServiceStub asyncStub)</span> &#123;</span><br><span class="line">        <span class="type">CountDownLatch</span> <span class="variable">finishLatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(<span class="number">1</span>);</span><br><span class="line">        StreamObserver&lt;UserInfoEntity.SupplyUserChangeInfoRes&gt; resStreamObserver = <span class="keyword">new</span> <span class="title class_">StreamObserver</span>&lt;UserInfoEntity.SupplyUserChangeInfoRes&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(UserInfoEntity.SupplyUserChangeInfoRes value)</span> &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;id:&quot;</span>+value.getId()+<span class="string">&quot;\tloc:&quot;</span>+value.getLoc()+<span class="string">&quot;\ttemp:&quot;</span>+value.getTemperature());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;服务端流关闭&quot;</span>);</span><br><span class="line">                finishLatch.countDown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        asyncStub.supplyUserChangeInfo(UserInfoEntity.SupplyUserChangeInfoReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>).build(),resStreamObserver);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!finishLatch.await(<span class="number">10</span>, TimeUnit.SECONDS)) &#123;</span><br><span class="line">                logger.warning(<span class="string">&quot;FAILED : Process orders cannot finish within 10 seconds&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>GO语言实现</strong></li></ul><p>a、服务端支持</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *StreamUserInfoServiceImpl)</span></span> SupplyUserChangeInfo(req *pb.SupplyUserChangeInfoReq,</span><br><span class="line">res pb.UserInfoService_SupplyUserChangeInfoServer) <span class="type">error</span>&#123;</span><br><span class="line"><span class="comment">//获取用户的数据</span></span><br><span class="line"><span class="keyword">if</span> server.UserLocationTmp == <span class="literal">nil</span>&#123;</span><br><span class="line">server.initUserLocationTmp()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">id := req.Id</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(id) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">&quot;id不能为空&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取该用户的历史移动轨迹</span></span><br><span class="line">locTmps := server.UserLocationTmp[id]</span><br><span class="line"><span class="keyword">for</span> i, tmp := <span class="keyword">range</span> locTmps &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;i:%d,data:%v&quot;</span>,i,tmp)</span><br><span class="line">err := res.Send(&amp;pb.SupplyUserChangeInfoRes&#123;</span><br><span class="line">Id:id,</span><br><span class="line">Loc: tmp.Loc,</span><br><span class="line">Temperature: tmp.Temperature,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;error sending message to stream : %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>b、客户端接收数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SupplyUserChangeInfo</span><span class="params">(c pb.UserInfoServiceClient)</span></span> &#123;</span><br><span class="line">req:= &amp;pb.SupplyUserChangeInfoReq&#123;</span><br><span class="line">Id:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">res,err:=c.SupplyUserChangeInfo(context.Background(),req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;err:%v&quot;</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line">data,err:=res.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;data:%v&quot;</span>,data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、客户端服务端双向流"><a href="#3、客户端服务端双向流" class="headerlink" title="3、客户端服务端双向流"></a>3、客户端服务端双向流</h2><p>在proto文件中创建一个服务端下发流数据的rpc方法 - <strong>supplyUserChangeInfo</strong></p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;<span class="comment">//标识 proto版本 建议使用proto3</span></span><br><span class="line"><span class="keyword">package</span> userinfoservice;<span class="comment">//proto包名 避免命名冲突，也可以作为引入其他proto文件时使用</span></span><br><span class="line"><span class="keyword">option</span> java_package = <span class="string">&quot;com.example.userinfoservice&quot;</span> ;<span class="comment">//生成的类将带有此包名，不指定则使用package</span></span><br><span class="line"><span class="keyword">option</span> cc_generic_services = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;./pb&quot;</span>;</span><br><span class="line"><span class="keyword">option</span> java_outer_classname = <span class="string">&quot;UserInfoEntity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">GetUserInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> name = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int32</span> age = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ReportUserBehaviorReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> behavior = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ReportUserBehaviorRes</span>&#123;</span><br><span class="line">  <span class="type">int32</span> retCode = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> retMsg = <span class="number">2</span>;</span><br><span class="line">  <span class="type">int64</span> receivedCount = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">SupplyUserChangeInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">SupplyUserChangeInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> loc = <span class="number">2</span>;</span><br><span class="line">  <span class="type">string</span> temperature = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ExchangeUserInfoReq</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">double</span> lng = <span class="number">2</span>;</span><br><span class="line">  <span class="type">double</span> lat = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">ExchangeUserInfoRes</span>&#123;</span><br><span class="line">  <span class="type">string</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> loc = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">service </span><span class="title class_">UserInfoService</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> getUserInfo(GetUserInfoReq) <span class="keyword">returns</span> (GetUserInfoRes)</span>;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> reportUserBehavior(stream ReportUserBehaviorReq) <span class="keyword">returns</span> (ReportUserBehaviorRes)</span>;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> supplyUserChangeInfo(SupplyUserChangeInfoReq) <span class="keyword">returns</span> (stream SupplyUserChangeInfoRes)</span>;</span><br><span class="line"><span class="comment">//双向流  </span></span><br><span class="line"><span class="function"><span class="keyword">rpc</span> exchangeUserInfo(stream ExchangeUserInfoReq) <span class="keyword">returns</span> (stream ExchangeUserInfoRes)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Java语言实现</strong></li></ul><p>a、服务端实现此方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//客户端服务端流</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> StreamObserver&lt;UserInfoEntity.ExchangeUserInfoReq&gt; exchangeUserInfo(StreamObserver&lt;UserInfoEntity.ExchangeUserInfoRes&gt; responseObserver) &#123;</span><br><span class="line">        responseObserver.onNext(UserInfoEntity.ExchangeUserInfoRes.newBuilder()</span><br><span class="line">                .setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLoc(<span class="string">&quot;上海&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        responseObserver.onNext(UserInfoEntity.ExchangeUserInfoRes.newBuilder()</span><br><span class="line">                .setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLoc(<span class="string">&quot;上海东站&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        responseObserver.onNext(UserInfoEntity.ExchangeUserInfoRes.newBuilder()</span><br><span class="line">                .setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLoc(<span class="string">&quot;上海西站&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line"></span><br><span class="line">        responseObserver.onNext(UserInfoEntity.ExchangeUserInfoRes.newBuilder()</span><br><span class="line">                .setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLoc(<span class="string">&quot;上海南站&quot;</span>)</span><br><span class="line">                .build());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">StreamObserver</span>&lt;UserInfoEntity.ExchangeUserInfoReq&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(UserInfoEntity.ExchangeUserInfoReq value)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;id:&quot;</span>+value.getId()+<span class="string">&quot;\tlat:&quot;</span>+value.getLat()+<span class="string">&quot;\tlng:&quot;</span>+value.getLng());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                responseObserver.onCompleted();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>b、客户端接受流并上报流数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ExchangeUserInfo</span><span class="params">(UserInfoServiceGrpc.UserInfoServiceStub asyncStub)</span> &#123;</span><br><span class="line">        <span class="type">CountDownLatch</span> <span class="variable">finishLatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(<span class="number">1</span>);</span><br><span class="line">        StreamObserver&lt;UserInfoEntity.ExchangeUserInfoRes&gt; resStreamObserver = <span class="keyword">new</span> <span class="title class_">StreamObserver</span>&lt;UserInfoEntity.ExchangeUserInfoRes&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(UserInfoEntity.ExchangeUserInfoRes value)</span> &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;res,id:&quot;</span>+value.getId()+<span class="string">&quot;\tloc:&quot;</span>+value.getLoc());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;服务端流关闭 交换数据结束&quot;</span>);</span><br><span class="line">                finishLatch.countDown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        StreamObserver&lt;UserInfoEntity.ExchangeUserInfoReq&gt; exchangeUserInfoReqStreamObserver = asyncStub.exchangeUserInfo(resStreamObserver);</span><br><span class="line">        exchangeUserInfoReqStreamObserver.onNext(UserInfoEntity.ExchangeUserInfoReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLat(<span class="number">12.12</span>)</span><br><span class="line">                .setLng(<span class="number">23.23</span>)</span><br><span class="line">                .build());</span><br><span class="line">        exchangeUserInfoReqStreamObserver.onNext(UserInfoEntity.ExchangeUserInfoReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLat(<span class="number">22.12</span>)</span><br><span class="line">                .setLng(<span class="number">33.23</span>)</span><br><span class="line">                .build());</span><br><span class="line">        exchangeUserInfoReqStreamObserver.onNext(UserInfoEntity.ExchangeUserInfoReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLat(<span class="number">32.12</span>)</span><br><span class="line">                .setLng(<span class="number">43.23</span>)</span><br><span class="line">                .build());</span><br><span class="line">        exchangeUserInfoReqStreamObserver.onNext(UserInfoEntity.ExchangeUserInfoReq.newBuilder().setId(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .setLat(<span class="number">42.12</span>)</span><br><span class="line">                .setLng(<span class="number">53.23</span>)</span><br><span class="line">                .build());</span><br><span class="line">        exchangeUserInfoReqStreamObserver.onCompleted();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!finishLatch.await(<span class="number">10</span>, TimeUnit.SECONDS)) &#123;</span><br><span class="line">                logger.warning(<span class="string">&quot;FAILED : Process orders cannot finish within 10 seconds&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Go语言实现</strong></li></ul><p>a、服务端实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *StreamUserInfoServiceImpl)</span></span> ExchangeUserInfo(ex pb.UserInfoService_ExchangeUserInfoServer) <span class="type">error</span> &#123;</span><br><span class="line"><span class="keyword">for</span>  &#123;</span><br><span class="line">recv, err := ex.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF&#123;</span><br><span class="line">err := ex.Send(&amp;pb.ExchangeUserInfoRes&#123;</span><br><span class="line">Id:  <span class="string">&quot;结束汇报&quot;</span>,</span><br><span class="line">Loc: <span class="string">&quot;结束汇报&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;用户Id:%s, lat:%v,lng:%v&quot;</span>,recv.Id,recv.Lat,recv.Lng)</span><br><span class="line">err = ex.Send(&amp;pb.ExchangeUserInfoRes&#123;</span><br><span class="line">Id:  recv.Id,</span><br><span class="line">Loc: <span class="string">&quot;收到，您当前的位置是北京&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>b、客户端实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ExchangeUserInfo</span><span class="params">(c pb.UserInfoServiceClient)</span></span> &#123;</span><br><span class="line">info, err := c.ExchangeUserInfo(context.Background())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">req := &amp;pb.ExchangeUserInfoReq&#123;</span><br><span class="line">Id:  <span class="string">&quot;1&quot;</span>,</span><br><span class="line">Lng: <span class="number">12.12</span>,</span><br><span class="line">Lat: <span class="number">32.32</span>,</span><br><span class="line">&#125;</span><br><span class="line">err = info.Send(req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lisChanClose := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> listenExchangeUserInfo(info,lisChanClose)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := info.CloseSend(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> lisChanClose&lt;-<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;二、流式传输&quot;&gt;&lt;a href=&quot;#二、流式传输&quot; class=&quot;headerlink&quot; title=&quot;二、流式传输&quot;&gt;&lt;/a&gt;二、流式传输&lt;/h1&gt;&lt;p&gt;我们第一节学习的是简单一元数据传输，也就是在rpc中最常见的一个请求对应一个响应。但往往在实际开发中可能有这</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grpc in action</title>
    <link href="http://dreamerpxy.github.io/2022/12/24/Grpc-in-action/Grpc-in-action/"/>
    <id>http://dreamerpxy.github.io/2022/12/24/Grpc-in-action/Grpc-in-action/</id>
    <published>2022-12-24T15:36:14.000Z</published>
    <updated>2022-12-25T05:37:14.062Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://dreamerpxy.github.io/" title="Grpc-in-action-六-负载均衡（一）">Grpc-in-action(一) 快速开始</a></li><li><a href="https://dreamerpxy.github.io/" title="Grpc-in-action-六-负载均衡（一）">Grpc-in-action(二) stream</a></li><li><a href="https://dreamerpxy.github.io/" title="Grpc-in-action-六-负载均衡（一）">Grpc-in-action(三) 拦截器</a></li><li><a href="https://dreamerpxy.github.io/" title="Grpc-in-action-六-负载均衡（一）">Grpc-in-action(四) metadata）</a></li><li><a href="https://dreamerpxy.github.io/" title="Grpc-in-action-六-负载均衡（一）">Grpc-in-action(五) 错误处理</a></li><li><a href="https://dreamerpxy.github.io/" title="Grpc-in-action-六-负载均衡（一）">Grpc-in-action-六-负载均衡（一）</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dreamerpxy.github.io/&quot; title=&quot;Grpc-in-action-六-负载均衡（一）&quot;&gt;Grpc-in-action(一) 快速开始&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dream</summary>
      
    
    
    
    
  </entry>
  
</feed>
